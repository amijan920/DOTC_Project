<!DOCTYPE html>
<html>
  <head>
    <title>Port Visualizer</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }

      #info-window{
        margin: 30px;
        padding: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        color: #ffffff;
        font-family: Roboto;
        font-size: 15px;
        height: 110px;
        width: 400px;
        outline: none;
        background-color: #3f3f3f;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      p{
        margin: 8px;
        display: block;
        color: #FFF;
      }

      #info2,#info3{
        padding-left:10px;
      }
    </style>
    <!-- // <script src="https://maps.googleapis.com/maps/api/js?v=3.20.exp&signed_in=true&region=PH"></script> -->
  </head>
  <body>
    <div id="info-window">
      <p id="info1">Information Window</p>
      <p id="info2">Click any port or connection to display statistics</p>
      <p id="info3"></p>
    </div>
    <div id="map-canvas"></div>
    <script>
    view = "port_vis";
      var map;
var active;
var graph = [];
var paths = [];
var sections = 18;
var info1 = document.getElementById('info1');
var info2 = document.getElementById('info2');
var info3 = document.getElementById('info3');
var ln1 = "Information Window";
var ln2 = "Click any port or connection to display statistics";
var ln3 = "";

var a0 = "<%= asset_path('assets/port_vis/active_c0.png') %>";
var a2 = "<%= asset_path('assets/port_vis/active_c2.png') %>";
var i0 = "<%= asset_path('assets/port_vis/inactive_c0.png') %>";
var i2 = "<%= asset_path('assets/port_vis/inactive_c2.png') %>";
// var a0 = url(<%= asset_path('assets/images/port_vis/active_c0.png') %>);
// var a2 = url(<%= asset_path('assets/images/port_vis/active_c2.png') %>);
// var i0 = url(<%= asset_path('assets/images/port_vis/inactive_c0.png') %>);
// var i2 = url(<%= asset_path('assets/images/port_vis/inactive_c2.png') %>);
// var a0 = '../../assets/images/port-vis/active_c0.png';
// var a2 = '../../assets/images/port-vis/active_c2.png';
// var i0 = '../../assets/images/port-vis/inactive_c0.png';
// var i2 = '../../assets/images/port-vis/inactive_c2.png';

function Port(n, lt, ln, c, s){
  this.portName = n;
  this.cluster = c;
  this.conns = s;
  this.identifier = 0;
  var ic;
  if(c==0) ic = i0;
  else ic = i2;
  this.marker = new google.maps.Marker({
    position:{lat: lt,lng:ln},
    title:n,
    icon: ic
  });
  this.marker.par = this;
  this.edges = [];
  google.maps.event.addListener(this.marker, 'click', function () {
    var cluster = this.par.cluster;
    if(active===this){
      active = null;
      info1.innerHTML = ln1;
      info2.innerHTML = ln2;
      info3.innerHTML = ln3;
      if(cluster==0)this.setOptions({icon: i0});
      else this.setOptions({icon: i2});
      for(var i=0; i<paths.length; i++)paths[i].setMap(null);
      paths.splice(0,paths.length);
    }
    else{
      if(active!=null){
        if(active.identifier==this.identifier){
          if(active.par.cluster==0)active.setOptions({icon: i0});
          else active.setOptions({icon: i2});
        }
      }
      info1.innerHTML = this.title;
      info2.innerHTML = "Displaying "+this.par.edges.length+" out of "+this.par.conns+" connection(s).";
      info3.innerHTML = "Cluster "+this.par.cluster;
      active = this;
      if(cluster==0)this.setOptions({icon: a0});
      else this.setOptions({icon: a2});
      for(var i=0; i<paths.length; i++)paths[i].setMap(null);
      paths.splice(0,paths.length);
      for(var i=0; i<this.par.edges.length; i++) paths.push(this.par.edges[i].path);
      for(var i=0; i<paths.length; i++) paths[i].setMap(map);
    }
  });
}

function Edge(p1,p2, trips, vessels){
  this.origin = p1;
  this.destination = p2;
  this.trips = trips;
  this.vessels = vessels;
  this.identifier = 1;
  var points = makePath(p1.marker,p2.marker);
  this.path = new google.maps.Polyline({
    path:points,
    strokeColor:"#00FF00",
    strokeOpacity:0.8,
    strokeWeight:2.5
  });
  this.path.par = this;
  if(trips>=10){
    this.path.setOptions({strokeColor:"#BF5239",strokeWeight: 5});
  }
  google.maps.event.addListener(this.path, 'mouseover', function () {
    if(trips>=10){
      this.setOptions({strokeColor:"#BF2604",strokeWeight: 5});
    }
    else this.setOptions({strokeColor:"#006600",strokeWeight: 5});
  });
  google.maps.event.addListener(this.path, 'mouseout', function () {
    if(trips>=10){
      this.setOptions({strokeColor:"#BF5239",strokeWeight: 5});
    }
    else this.setOptions({strokeColor:"#00FF00", strokeWeight: 2.5});
  });
  google.maps.event.addListener(this.path, 'click', function () {
    // console.log((typeof active)+" "+(typeof this));
    if(active===this){
      active = null;
      info1.innerHTML = ln1;
      info2.innerHTML = ln2;
      info3.innerHTML = ln3;
    }
    else{
      if(active!==null){
        if(active.identifier!=this.par.identifier){
          if(active.par.cluster==0)active.setOptions({icon: i0});
          else active.setOptions({icon: i2});
        }
      }
      active = this;
      info1.innerHTML = this.par.origin.portName+" to "+this.par.destination.portName;
      info2.innerHTML = "Trips: "+this.par.trips;
      info3.innerHTML = "Vessels: "+this.par.vessels;
    }
  });
}

function makeEdge(p1,p2, trips, vessels){
  // var b1 = p2.marker.position.lat()>p1.marker.position.lat();
  // var b2 =  p2.marker.position.lng()<p1.marker.position.lng();
  // if(b1||b2){
  //   var temp = p1;
  //   p1 = p2;
  //   p2 = temp;
  // }
  var temp = new Edge(p1,p2, trips, vessels);
  p1.edges.push(temp);
}
function initGraph(){
  graph.push(new Port('BREDCO 2, Bacolod',10.640739,122.968956,0,62));
  graph.push(new Port('Batangas Pier',13.756465,121.058308,0,122));
  graph.push(new Port('Baybay',10.652141,124.852563,0,21));
  graph.push(new Port('Cagayan De Oro',8.494714,124.662493,0,99));
  graph.push(new Port('Calapan',13.377094,121.164571,0,21));
  graph.push(new Port('Cebu',10.300690,123.914409,0,143));
  graph.push(new Port('Craft Haven, Davao',7.190708,125.455341,0,4));
  graph.push(new Port('Dapitan',8.625319,123.394571,0,16));
  graph.push(new Port('Davao (Sasa)',7.127303,125.653113,0,88));
  graph.push(new Port('Dumaguete',9.306840,123.305447,0,46));
  graph.push(new Port('General Santos',6.116386,125.171618,0,65));
  graph.push(new Port('Iligan',8.228021,124.245242,0,90));
  graph.push(new Port('Legazpi',13.145803,123.758582,0,60));
  graph.push(new Port('Loboc',9.658166,124.030725,0,37));
  graph.push(new Port('Masbate',12.369193,123.616353,0,38));
  graph.push(new Port('Nasipit',8.971490,125.351822,0,47));
  graph.push(new Port('Ormoc',11.003954,124.606645,0,46));
  graph.push(new Port('Ozamiz',8.162411,123.774119,0,36));
  graph.push(new Port('PACINTER',8.162411,123.774119,0,10));
  graph.push(new Port('Puerto Princesa',9.967216,118.785510,0,69));
  graph.push(new Port('San Carlos',10.483734,123.412896,0,20));
  graph.push(new Port('Tabaco',13.324096,123.645139,0,27));
  graph.push(new Port('Tacloban',11.254339,124.961687,0,58));
  graph.push(new Port('Tagbilaran',9.672948,123.873002,0,83));
  graph.push(new Port('Tubigon',9.914497,123.963853,0,18));
  graph.push(new Port('Verano Port, Surigao',9.757131,125.513767,0,30));
  graph.push(new Port('Zamboanga',6.921442,122.079027,0,73));
  graph.push(new Port('Algimar-Masbate (MAP 2000)',12.357435,123.550408,1,3));
  graph.push(new Port('Arteche',12.287335,125.412436,1,3));
  graph.push(new Port('Babatngon, Leyte',11.390511,124.884487,1,4));
  graph.push(new Port('Bulado, Guihulngan',10.116667,123.266670,1,3));
  graph.push(new Port('Cabugao, Catanduanes',17.793600,120.455076,1,1));
  graph.push(new Port('Cadiz Private Ports',10.806006,123.213851,1,1));
  graph.push(new Port('Calbayog',12.067575,124.592957,1,18));
  graph.push(new Port('Calpi, Masbate',12.357435,123.550408,1,3));
  graph.push(new Port('Caltex (Phil.) Inc. - Palnab, Virac',13.574237,124.157636,1,5));
  graph.push(new Port('Capul Island',12.419533,124.164320,1,3));
  graph.push(new Port('Caramoan, Camarines Sur',13.807652,123.850005,1,2));
  graph.push(new Port('Clarin',8.205338,123.801203,1,4));
  graph.push(new Port('Claveria, Masbate',12.879621,123.236325,1,6));
  graph.push(new Port('Daan Banwa',10.899903,123.066592,1,1));
  graph.push(new Port('Del Monte Philippines, Inc.',7.113972,125.652079,1,1));
  graph.push(new Port('Dr. Nap Masayon, Siquijor',9.213263,123.515703,1,1));
  graph.push(new Port('GN Power',14.422465,120.539468,1,3));
  graph.push(new Port('General Milling Corp. - Cagayan de Oro',8.480925,124.724004,1,3));
  graph.push(new Port('Jimenez',8.322755,123.762947,1,21));
  graph.push(new Port('LGU Port - Cadiz',10.806006,123.213851,1,2));
  graph.push(new Port('Manila International Container Terminal',14.598131,120.951778,1,9));
  graph.push(new Port('Masinloc',15.528553,119.960800,1,9));
  graph.push(new Port('Port of San Vicente, Bajo,Oroquieta City',8.459527,123.800650,1,1));
  graph.push(new Port('Salomague Port',17.789912,120.432885,1,3));
  graph.push(new Port('San Antonio',14.927509,120.089631,1,2));
  graph.push(new Port('San Pascual, Masbate',13.048760,123.033877,1,3));
  graph.push(new Port('Sangali',7.070204,122.203392,1,2));
  graph.push(new Port('Sipalay',9.719789,122.492009,1,1));
  graph.push(new Port('Sum-ag Port Terminal',10.600746,122.926862,1,1));
  graph.push(new Port('Albuera',10.905387,124.751981,2,21));
  graph.push(new Port('Aparri Government Wharf',18.355084,121.642006,2,2));
  graph.push(new Port('BANAGO, Bacolod',10.705623,122.949401,2,13));
  graph.push(new Port('Balingoan',9.004017,124.847268,2,1));
  graph.push(new Port('Basak, Guihulngan, Negros Oriental',10.116667,123.266670,2,2));
  graph.push(new Port('Basco - Batanes',20.463438,122.004179,2,6));
  graph.push(new Port('Basilan',6.429635,121.987016,2,17));
  graph.push(new Port('Batangas Port Project Phase 2',13.756465,121.058308,2,1));
  graph.push(new Port('Bato',10.339769,124.849530,2,9));
  graph.push(new Port('Bato',10.339769,124.849530,2,9));
  graph.push(new Port('Botolan Anchorage',15.266246,120.205110,2,2));
  graph.push(new Port('Brookes Point',8.818934,117.784246,2,8));
  graph.push(new Port('Bulan',12.664994,123.887734,2,14));
  graph.push(new Port('Butuan (Other Government Port)',8.947538,125.540623,2,9));
  graph.push(new Port('Cabalian',10.285615,125.181869,2,5));
  graph.push(new Port('Cantilan',9.282823,125.942188,2,10));
  graph.push(new Port('Castilla',12.955177,123.818798,2,10));
  graph.push(new Port('Catarman Oil Mill, Inc.',12.419845,124.641403,2,4));
  graph.push(new Port('Catbalogan',11.824043,124.840341,2,23));
  graph.push(new Port('Cawayan, Masbate',12.055794,123.729420,2,1));
  graph.push(new Port('Central Azucarera De Bais',9.506046,123.123905,2,6));
  graph.push(new Port('Culion',11.821929,120.020296,2,1));
  graph.push(new Port('Del Carmen',9.874977,125.980553,2,1));
  graph.push(new Port('Dinagat',10.128182,125.609547,2,10));
  graph.push(new Port('Filminera, Aroroy, Masbate',12.452900,123.399103,2,5));
  graph.push(new Port('Getafe',10.129801,124.175444,2,1));
  graph.push(new Port('Hilongos',10.370812,124.753367,2,4));
  graph.push(new Port('Hindang',10.430501,124.744171,2,4));
  graph.push(new Port('Homonhon Island',10.730108,125.729768,2,2));
  graph.push(new Port('Iloilo River Wharf - RC3',10.720150,122.562106,2,3));
  graph.push(new Port('Jagna',9.650491,124.365347,2,21));
  graph.push(new Port('LGU Port of Galas, Dipolog City',8.546811,123.343003,2,3));
  graph.push(new Port('Larena',9.246337,123.606385,2,10));
  graph.push(new Port('Lazi',9.123725,123.595192,2,3));
  graph.push(new Port('Liloan Ferry Terminal',10.159195,125.124987,2,3));
  graph.push(new Port('Liloy-Lamao',8.137727,122.675953,2,5));
  graph.push(new Port('Lipata - Surigao City',9.809331,125.453540,2,5));
  graph.push(new Port('MARIVELES',14.457977,120.458806,2,9));
  graph.push(new Port('Maasin',10.165355,124.840341,2,23));
  graph.push(new Port('Malobago, Rapu-rapu',13.173535,124.199078,2,4));
  graph.push(new Port('Margosatubig',7.571322,123.180131,2,2));
  graph.push(new Port('Masao (Other Government Port)',8.991037,125.494624,2,10));
  graph.push(new Port('Matnog',12.607750,124.057775,2,6));
  graph.push(new Port('Nabilid, Roxas',8.483334,123.216667,2,26));
  graph.push(new Port('Palompon',11.017213,124.408731,2,13));
  graph.push(new Port('Pasacao',13.552319,123.031495,2,27));
  graph.push(new Port('Pasar',10.911949,124.437976,2,27));
  graph.push(new Port('Philphos',9.765049,118.749089,2,22));
  graph.push(new Port('Pioduran',13.047304,123.460774,2,1));
  graph.push(new Port('Pulupandan',10.525947,122.814091,2,7));
  graph.push(new Port('Recodo',6.954427,121.957603,2,7));
  graph.push(new Port('Sindangan',8.233377,123.011357,2,9));
  graph.push(new Port('Siquijor',9.213263,123.515703,2,10));
  graph.push(new Port('Sogod',10.432923,124.994751,2,12));
  graph.push(new Port('Sorsogon',12.992710,124.014746,2,9));
  graph.push(new Port('Sula, Bacacay, Albay',13.235562,123.860664,2,2));
  graph.push(new Port('Talibon',10.157695,124.264387,2,3));
  graph.push(new Port('Tapal',10.058422,124.516834,2,13));
  graph.push(new Port('Ubay',9.993203,124.448368,2,19));
  graph.push(new Port('Virac',13.584863,124.206584,2,6));
  makeEdge(graph[0],graph[55],1,1);
  makeEdge(graph[0],graph[16],2,2);
  makeEdge(graph[0],graph[8],13,11);
  makeEdge(graph[0],graph[24],1,1);
  makeEdge(graph[0],graph[1],94,46);
  makeEdge(graph[0],graph[113],1,1);
  makeEdge(graph[0],graph[21],2,2);
  makeEdge(graph[0],graph[101],6,6);
  makeEdge(graph[0],graph[3],25,7);
  makeEdge(graph[0],graph[19],1,1);
  makeEdge(graph[0],graph[11],1,1);
  makeEdge(graph[0],graph[5],84,52);
  makeEdge(graph[0],graph[2],1,1);
  makeEdge(graph[0],graph[105],1,1);
  makeEdge(graph[0],graph[17],11,1);
  makeEdge(graph[0],graph[23],2,2);
  makeEdge(graph[0],graph[12],3,1);
  makeEdge(graph[0],graph[26],17,3);
  makeEdge(graph[1],graph[8],12,7);
  makeEdge(graph[1],graph[0],59,31);
  makeEdge(graph[1],graph[21],1,1);
  makeEdge(graph[1],graph[3],66,25);
  makeEdge(graph[1],graph[11],1,1);
  makeEdge(graph[1],graph[5],20,10);
  makeEdge(graph[1],graph[72],1,1);
  makeEdge(graph[1],graph[13],11,5);
  makeEdge(graph[1],graph[20],1,1);
  makeEdge(graph[1],graph[80],25,3);
  makeEdge(graph[1],graph[12],2,2);
  makeEdge(graph[1],graph[76],2,2);
  makeEdge(graph[1],graph[115],1,1);
  makeEdge(graph[1],graph[68],2,2);
  makeEdge(graph[1],graph[1],14,13);
  makeEdge(graph[1],graph[15],10,5);
  makeEdge(graph[1],graph[52],1,1);
  makeEdge(graph[1],graph[102],1,1);
  makeEdge(graph[1],graph[101],8,4);
  makeEdge(graph[1],graph[10],9,6);
  makeEdge(graph[1],graph[4],9287,46);
  makeEdge(graph[1],graph[97],2,2);
  makeEdge(graph[1],graph[19],14,13);
  makeEdge(graph[1],graph[22],1,1);
  makeEdge(graph[1],graph[105],1,1);
  makeEdge(graph[1],graph[74],1,1);
  makeEdge(graph[1],graph[45],10,1);
  makeEdge(graph[1],graph[23],18,3);
  makeEdge(graph[1],graph[14],1,1);
  makeEdge(graph[1],graph[35],2,1);
  makeEdge(graph[1],graph[93],1,1);
  makeEdge(graph[1],graph[26],2,2);
  makeEdge(graph[2],graph[94],4,4);
  makeEdge(graph[2],graph[21],1,1);
  makeEdge(graph[2],graph[9],1,1);
  makeEdge(graph[2],graph[109],1,1);
  makeEdge(graph[2],graph[70],1,1);
  makeEdge(graph[2],graph[83],2,2);
  makeEdge(graph[2],graph[5],412,16);
  makeEdge(graph[2],graph[12],1,1);
  makeEdge(graph[2],graph[16],1,1);
  makeEdge(graph[3],graph[8],5,4);
  makeEdge(graph[3],graph[0],24,5);
  makeEdge(graph[3],graph[3],40,17);
  makeEdge(graph[3],graph[11],23,13);
  makeEdge(graph[3],graph[99],4,4);
  makeEdge(graph[3],graph[87],1,1);
  makeEdge(graph[3],graph[5],370,57);
  makeEdge(graph[3],graph[13],22,13);
  makeEdge(graph[3],graph[17],12,8);
  makeEdge(graph[3],graph[94],1,1);
  makeEdge(graph[3],graph[12],4,3);
  makeEdge(graph[3],graph[92],1,1);
  makeEdge(graph[3],graph[58],6,2);
  makeEdge(graph[3],graph[7],1,1);
  makeEdge(graph[3],graph[9],44,10);
  makeEdge(graph[3],graph[16],17,5);
  makeEdge(graph[3],graph[68],3,1);
  makeEdge(graph[3],graph[1],36,24);
  makeEdge(graph[3],graph[15],9,6);
  makeEdge(graph[3],graph[102],2,2);
  makeEdge(graph[3],graph[101],1,1);
  makeEdge(graph[3],graph[10],20,13);
  makeEdge(graph[3],graph[103],3,3);
  makeEdge(graph[3],graph[22],62,9);
  makeEdge(graph[3],graph[105],1,1);
  makeEdge(graph[3],graph[74],1,1);
  makeEdge(graph[3],graph[86],132,7);
  makeEdge(graph[3],graph[23],79,6);
  makeEdge(graph[3],graph[14],1,1);
  makeEdge(graph[3],graph[26],5,4);
  makeEdge(graph[4],graph[1],9252,46);
  makeEdge(graph[4],graph[22],5,5);
  makeEdge(graph[4],graph[113],1,1);
  makeEdge(graph[4],graph[86],1,1);
  makeEdge(graph[4],graph[9],1,1);
  makeEdge(graph[4],graph[14],1,1);
  makeEdge(graph[4],graph[101],2,2);
  makeEdge(graph[4],graph[5],1,1);
  makeEdge(graph[4],graph[4],14,9);
  makeEdge(graph[4],graph[2],1,1);
  makeEdge(graph[4],graph[26],1,1);
  makeEdge(graph[4],graph[0],1,1);
  makeEdge(graph[4],graph[107],1,1);
  makeEdge(graph[5],graph[65],281,4);
  makeEdge(graph[5],graph[66],1,1);
  makeEdge(graph[5],graph[81],2329,18);
  makeEdge(graph[5],graph[88],9,5);
  makeEdge(graph[5],graph[91],2,1);
  makeEdge(graph[5],graph[90],1,1);
  makeEdge(graph[5],graph[110],6,4);
  makeEdge(graph[5],graph[8],50,19);
  makeEdge(graph[5],graph[24],3302,30);
  makeEdge(graph[5],graph[0],88,53);
  makeEdge(graph[5],graph[71],2,2);
  makeEdge(graph[5],graph[100],290,29);
  makeEdge(graph[5],graph[113],15,11);
  makeEdge(graph[5],graph[21],10,5);
  makeEdge(graph[5],graph[3],445,64);
  makeEdge(graph[5],graph[11],54,24);
  makeEdge(graph[5],graph[108],7,1);
  makeEdge(graph[5],graph[49],1,1);
  makeEdge(graph[5],graph[99],16,12);
  makeEdge(graph[5],graph[109],3,2);
  makeEdge(graph[5],graph[87],37,1);
  makeEdge(graph[5],graph[72],3,3);
  makeEdge(graph[5],graph[13],59,25);
  makeEdge(graph[5],graph[28],1,1);
  makeEdge(graph[5],graph[17],235,15);
  makeEdge(graph[5],graph[67],1,1);
  makeEdge(graph[5],graph[94],110,17);
  makeEdge(graph[5],graph[80],2,2);
  makeEdge(graph[5],graph[84],1,1);
  makeEdge(graph[5],graph[38],43,3);
  makeEdge(graph[5],graph[12],11,10);
  makeEdge(graph[5],graph[76],1,1);
  makeEdge(graph[5],graph[54],1,1);
  makeEdge(graph[5],graph[69],1,1);
  makeEdge(graph[5],graph[7],76,7);
  makeEdge(graph[5],graph[112],346,8);
  makeEdge(graph[5],graph[9],288,31);
  makeEdge(graph[5],graph[115],12,6);
  makeEdge(graph[5],graph[114],494,4);
  makeEdge(graph[5],graph[33],12,7);
  makeEdge(graph[5],graph[16],2815,65);
  makeEdge(graph[5],graph[25],177,33);
  makeEdge(graph[5],graph[68],11,6);
  makeEdge(graph[5],graph[82],659,12);
  makeEdge(graph[5],graph[15],100,14);
  makeEdge(graph[5],graph[89],13,1);
  makeEdge(graph[5],graph[1],24,9);
  makeEdge(graph[5],graph[102],22,19);
  makeEdge(graph[5],graph[101],36,24);
  makeEdge(graph[5],graph[10],82,26);
  makeEdge(graph[5],graph[4],1,1);
  makeEdge(graph[5],graph[97],2,2);
  makeEdge(graph[5],graph[103],15,14);
  makeEdge(graph[5],graph[75],157,1);
  makeEdge(graph[5],graph[19],26,19);
  makeEdge(graph[5],graph[22],107,48);
  makeEdge(graph[5],graph[70],2,1);
  makeEdge(graph[5],graph[83],357,19);
  makeEdge(graph[5],graph[44],3,3);
  makeEdge(graph[5],graph[2],406,15);
  makeEdge(graph[5],graph[105],2,2);
  makeEdge(graph[5],graph[74],75,26);
  makeEdge(graph[5],graph[62],5,3);
  makeEdge(graph[5],graph[86],7,6);
  makeEdge(graph[5],graph[23],2910,54);
  makeEdge(graph[5],graph[14],102,42);
  makeEdge(graph[5],graph[56],4,3);
  makeEdge(graph[5],graph[93],1,1);
  makeEdge(graph[5],graph[26],88,21);
  makeEdge(graph[5],graph[107],2,2);
  makeEdge(graph[7],graph[7],32,19);
  makeEdge(graph[7],graph[9],950,20);
  makeEdge(graph[7],graph[23],24,1);
  makeEdge(graph[7],graph[87],1,1);
  makeEdge(graph[7],graph[5],81,8);
  makeEdge(graph[7],graph[26],39,3);
  makeEdge(graph[7],graph[0],2,2);
  makeEdge(graph[7],graph[11],2,2);
  makeEdge(graph[8],graph[47],2,1);
  makeEdge(graph[8],graph[8],17,10);
  makeEdge(graph[8],graph[0],9,8);
  makeEdge(graph[8],graph[15],1,1);
  makeEdge(graph[8],graph[1],2,2);
  makeEdge(graph[8],graph[102],1,1);
  makeEdge(graph[8],graph[10],137,40);
  makeEdge(graph[8],graph[48],1,1);
  makeEdge(graph[8],graph[3],19,14);
  makeEdge(graph[8],graph[22],2,2);
  makeEdge(graph[8],graph[5],21,8);
  makeEdge(graph[8],graph[13],4,4);
  makeEdge(graph[8],graph[12],2,2);
  makeEdge(graph[8],graph[26],29,10);
  makeEdge(graph[8],graph[69],1,1);
  makeEdge(graph[8],graph[53],1,1);
  makeEdge(graph[9],graph[7],1008,21);
  makeEdge(graph[9],graph[99],2,2);
  makeEdge(graph[9],graph[9],22,17);
  makeEdge(graph[9],graph[88],384,8);
  makeEdge(graph[9],graph[5],270,26);
  makeEdge(graph[9],graph[8],1,1);
  makeEdge(graph[9],graph[24],1,1);
  makeEdge(graph[9],graph[25],1,1);
  makeEdge(graph[9],graph[1],1,1);
  makeEdge(graph[9],graph[89],1,1);
  makeEdge(graph[9],graph[86],1,1);
  makeEdge(graph[9],graph[23],199,17);
  makeEdge(graph[9],graph[10],1,1);
  makeEdge(graph[9],graph[93],1,1);
  makeEdge(graph[9],graph[26],22,9);
  makeEdge(graph[9],graph[3],31,7);
  makeEdge(graph[9],graph[11],6,4);
  makeEdge(graph[9],graph[19],2,2);
  makeEdge(graph[9],graph[108],2098,24);
  makeEdge(graph[10],graph[9],13,7);
  makeEdge(graph[10],graph[47],1,1);
  makeEdge(graph[10],graph[8],179,39);
  makeEdge(graph[10],graph[0],1,1);
  makeEdge(graph[10],graph[1],10,6);
  makeEdge(graph[10],graph[113],10,8);
  makeEdge(graph[10],graph[10],12,12);
  makeEdge(graph[10],graph[3],4,4);
  makeEdge(graph[10],graph[19],2,1);
  makeEdge(graph[10],graph[5],60,22);
  makeEdge(graph[10],graph[13],3,3);
  makeEdge(graph[10],graph[62],12,5);
  makeEdge(graph[10],graph[23],3,3);
  makeEdge(graph[10],graph[12],3,1);
  makeEdge(graph[10],graph[26],16,9);
  makeEdge(graph[11],graph[7],25,2);
  makeEdge(graph[11],graph[112],2,2);
  makeEdge(graph[11],graph[9],7,4);
  makeEdge(graph[11],graph[88],2,1);
  makeEdge(graph[11],graph[47],7,6);
  makeEdge(graph[11],graph[115],10,3);
  makeEdge(graph[11],graph[114],7,3);
  makeEdge(graph[11],graph[16],3,2);
  makeEdge(graph[11],graph[8],1,1);
  makeEdge(graph[11],graph[24],2,2);
  makeEdge(graph[11],graph[0],5,4);
  makeEdge(graph[11],graph[25],6,2);
  makeEdge(graph[11],graph[89],40,1);
  makeEdge(graph[11],graph[15],4,4);
  makeEdge(graph[11],graph[1],8,4);
  makeEdge(graph[11],graph[100],1,1);
  makeEdge(graph[11],graph[113],3,3);
  makeEdge(graph[11],graph[21],4,2);
  makeEdge(graph[11],graph[102],5,4);
  makeEdge(graph[11],graph[101],1,1);
  makeEdge(graph[11],graph[103],7,3);
  makeEdge(graph[11],graph[3],13,5);
  makeEdge(graph[11],graph[11],4,4);
  makeEdge(graph[11],graph[19],1,1);
  makeEdge(graph[11],graph[108],15,2);
  makeEdge(graph[11],graph[22],9,8);
  makeEdge(graph[11],graph[99],8,7);
  makeEdge(graph[11],graph[5],50,25);
  makeEdge(graph[11],graph[2],1,1);
  makeEdge(graph[11],graph[13],1,1);
  makeEdge(graph[11],graph[105],1,1);
  makeEdge(graph[11],graph[17],129,12);
  makeEdge(graph[11],graph[20],1,1);
  makeEdge(graph[11],graph[106],1,1);
  makeEdge(graph[11],graph[94],5,3);
  makeEdge(graph[11],graph[86],8,8);
  makeEdge(graph[11],graph[45],4,3);
  makeEdge(graph[11],graph[23],43,19);
  makeEdge(graph[11],graph[38],4,2);
  makeEdge(graph[11],graph[12],1,1);
  makeEdge(graph[11],graph[93],2,2);
  makeEdge(graph[11],graph[26],14,9);
  makeEdge(graph[11],graph[69],2,1);
  makeEdge(graph[11],graph[107],1,1);
  makeEdge(graph[12],graph[73],1,1);
  makeEdge(graph[12],graph[115],6,2);
  makeEdge(graph[12],graph[33],1,1);
  makeEdge(graph[12],graph[16],2,2);
  makeEdge(graph[12],graph[8],3,2);
  makeEdge(graph[12],graph[0],2,1);
  makeEdge(graph[12],graph[1],2,2);
  makeEdge(graph[12],graph[52],3,3);
  makeEdge(graph[12],graph[21],7,7);
  makeEdge(graph[12],graph[10],2,1);
  makeEdge(graph[12],graph[3],1,1);
  makeEdge(graph[12],graph[19],2,2);
  makeEdge(graph[12],graph[11],3,3);
  makeEdge(graph[12],graph[95],24,4);
  makeEdge(graph[12],graph[22],3,2);
  makeEdge(graph[12],graph[27],3,2);
  makeEdge(graph[12],graph[5],11,10);
  makeEdge(graph[12],graph[72],2,2);
  makeEdge(graph[12],graph[111],1,1);
  makeEdge(graph[12],graph[74],4,4);
  makeEdge(graph[12],graph[94],1,1);
  makeEdge(graph[12],graph[39],7,6);
  makeEdge(graph[12],graph[23],3,1);
  makeEdge(graph[12],graph[14],41,12);
  makeEdge(graph[12],graph[12],3,3);
  makeEdge(graph[12],graph[26],1,1);
  makeEdge(graph[12],graph[37],1,1);
  makeEdge(graph[13],graph[5],63,29);
  makeEdge(graph[13],graph[33],1,1);
  makeEdge(graph[13],graph[8],2,2);
  makeEdge(graph[13],graph[1],4,4);
  makeEdge(graph[13],graph[26],34,9);
  makeEdge(graph[13],graph[3],2,1);
  makeEdge(graph[14],graph[22],7,1);
  makeEdge(graph[14],graph[5],94,39);
  makeEdge(graph[14],graph[72],2,2);
  makeEdge(graph[14],graph[2],1,1);
  makeEdge(graph[14],graph[16],47,6);
  makeEdge(graph[14],graph[104],419,9);
  makeEdge(graph[14],graph[0],1,1);
  makeEdge(graph[14],graph[68],69,1);
  makeEdge(graph[14],graph[1],1,1);
  makeEdge(graph[14],graph[74],2,2);
  makeEdge(graph[14],graph[52],1,1);
  makeEdge(graph[14],graph[39],2,2);
  makeEdge(graph[14],graph[21],2,1);
  makeEdge(graph[14],graph[102],10,1);
  makeEdge(graph[14],graph[12],33,9);
  makeEdge(graph[14],graph[3],1,1);
  makeEdge(graph[14],graph[11],1,1);
  makeEdge(graph[15],graph[22],1,1);
  makeEdge(graph[15],graph[5],91,11);
  makeEdge(graph[15],graph[24],3,3);
  makeEdge(graph[15],graph[25],2,2);
  makeEdge(graph[15],graph[15],32,15);
  makeEdge(graph[15],graph[1],9,5);
  makeEdge(graph[15],graph[86],66,5);
  makeEdge(graph[15],graph[45],6,3);
  makeEdge(graph[15],graph[10],3,2);
  makeEdge(graph[15],graph[12],1,1);
  makeEdge(graph[15],graph[26],1,1);
  makeEdge(graph[15],graph[19],1,1);
  makeEdge(graph[15],graph[11],4,3);
  makeEdge(graph[16],graph[22],8,3);
  makeEdge(graph[16],graph[112],2,2);
  makeEdge(graph[16],graph[65],2,1);
  makeEdge(graph[16],graph[9],2,2);
  makeEdge(graph[16],graph[5],2802,65);
  makeEdge(graph[16],graph[72],1,1);
  makeEdge(graph[16],graph[114],2,2);
  makeEdge(graph[16],graph[2],3,3);
  makeEdge(graph[16],graph[16],22,16);
  makeEdge(graph[16],graph[0],2,2);
  makeEdge(graph[16],graph[29],2,1);
  makeEdge(graph[16],graph[68],1,1);
  makeEdge(graph[16],graph[94],1,1);
  makeEdge(graph[16],graph[113],2,2);
  makeEdge(graph[16],graph[23],4,4);
  makeEdge(graph[16],graph[14],25,1);
  makeEdge(graph[16],graph[35],1,1);
  makeEdge(graph[16],graph[56],1,1);
  makeEdge(graph[16],graph[103],1,1);
  makeEdge(graph[16],graph[34],16,4);
  makeEdge(graph[16],graph[3],33,5);
  makeEdge(graph[16],graph[11],2,2);
  makeEdge(graph[17],graph[7],15,2);
  makeEdge(graph[17],graph[99],4,1);
  makeEdge(graph[17],graph[9],1,1);
  makeEdge(graph[17],graph[87],1,1);
  makeEdge(graph[17],graph[5],216,36);
  makeEdge(graph[17],graph[47],9,6);
  makeEdge(graph[17],graph[13],2,2);
  makeEdge(graph[17],graph[0],8,1);
  makeEdge(graph[17],graph[17],47,34);
  makeEdge(graph[17],graph[25],1,1);
  makeEdge(graph[17],graph[106],1,1);
  makeEdge(graph[17],graph[113],1,1);
  makeEdge(graph[17],graph[45],1,1);
  makeEdge(graph[17],graph[23],3,2);
  makeEdge(graph[17],graph[3],36,13);
  makeEdge(graph[17],graph[26],3,3);
  makeEdge(graph[17],graph[11],164,15);
  makeEdge(graph[18],graph[18],1,1);
  makeEdge(graph[19],graph[9],1,1);
  makeEdge(graph[19],graph[0],1,1);
  makeEdge(graph[19],graph[15],3,1);
  makeEdge(graph[19],graph[1],7,6);
  makeEdge(graph[19],graph[10],3,2);
  makeEdge(graph[19],graph[3],1,1);
  makeEdge(graph[19],graph[19],4,4);
  makeEdge(graph[19],graph[11],1,1);
  makeEdge(graph[19],graph[5],23,17);
  makeEdge(graph[19],graph[67],4,4);
  makeEdge(graph[19],graph[23],1,1);
  makeEdge(graph[19],graph[56],1,1);
  makeEdge(graph[19],graph[12],2,2);
  makeEdge(graph[19],graph[26],2,2);
  makeEdge(graph[19],graph[107],1,1);
  makeEdge(graph[20],graph[1],2,1);
  makeEdge(graph[20],graph[5],1,1);
  makeEdge(graph[20],graph[8],2,2);
  makeEdge(graph[20],graph[76],21,3);
  makeEdge(graph[20],graph[26],2,1);
  makeEdge(graph[20],graph[0],4,3);
  makeEdge(graph[21],graph[5],4,3);
  makeEdge(graph[21],graph[115],156,5);
  makeEdge(graph[21],graph[2],11,2);
  makeEdge(graph[21],graph[8],2,2);
  makeEdge(graph[21],graph[0],2,2);
  makeEdge(graph[21],graph[31],9,1);
  makeEdge(graph[21],graph[14],3,1);
  makeEdge(graph[21],graph[10],1,1);
  makeEdge(graph[21],graph[12],5,5);
  makeEdge(graph[21],graph[26],1,1);
  makeEdge(graph[21],graph[3],2,2);
  makeEdge(graph[21],graph[37],29,1);
  makeEdge(graph[21],graph[19],1,1);
  makeEdge(graph[22],graph[47],15,4);
  makeEdge(graph[22],graph[73],1,1);
  makeEdge(graph[22],graph[16],28,3);
  makeEdge(graph[22],graph[8],1,1);
  makeEdge(graph[22],graph[0],3,3);
  makeEdge(graph[22],graph[25],4,2);
  makeEdge(graph[22],graph[1],2,2);
  makeEdge(graph[22],graph[15],1,1);
  makeEdge(graph[22],graph[21],2,2);
  makeEdge(graph[22],graph[3],19,5);
  makeEdge(graph[22],graph[11],4,3);
  makeEdge(graph[22],graph[22],12,11);
  makeEdge(graph[22],graph[70],2,2);
  makeEdge(graph[22],graph[5],84,36);
  makeEdge(graph[22],graph[74],1,1);
  makeEdge(graph[22],graph[94],2,2);
  makeEdge(graph[22],graph[23],1,1);
  makeEdge(graph[22],graph[12],2,2);
  makeEdge(graph[22],graph[69],1,1);
  makeEdge(graph[23],graph[9],197,10);
  makeEdge(graph[23],graph[88],79,6);
  makeEdge(graph[23],graph[16],7,5);
  makeEdge(graph[23],graph[8],1,1);
  makeEdge(graph[23],graph[24],3,3);
  makeEdge(graph[23],graph[1],5,3);
  makeEdge(graph[23],graph[100],1,1);
  makeEdge(graph[23],graph[102],7,6);
  makeEdge(graph[23],graph[10],1,1);
  makeEdge(graph[23],graph[103],1,1);
  makeEdge(graph[23],graph[3],97,8);
  makeEdge(graph[23],graph[11],28,11);
  makeEdge(graph[23],graph[19],1,1);
  makeEdge(graph[23],graph[22],10,3);
  makeEdge(graph[23],graph[99],1,1);
  makeEdge(graph[23],graph[109],35,6);
  makeEdge(graph[23],graph[83],6,4);
  makeEdge(graph[23],graph[5],2865,71);
  makeEdge(graph[23],graph[17],50,8);
  makeEdge(graph[23],graph[94],1,1);
  makeEdge(graph[23],graph[86],1,1);
  makeEdge(graph[23],graph[23],80,33);
  makeEdge(graph[23],graph[56],23,7);
  makeEdge(graph[23],graph[12],3,1);
  makeEdge(graph[23],graph[26],1,1);
  makeEdge(graph[24],graph[15],4,4);
  makeEdge(graph[24],graph[99],1,1);
  makeEdge(graph[24],graph[9],1,1);
  makeEdge(graph[24],graph[45],3,2);
  makeEdge(graph[24],graph[23],2,2);
  makeEdge(graph[24],graph[5],3303,31);
  makeEdge(graph[24],graph[56],1,1);
  makeEdge(graph[24],graph[16],1,1);
  makeEdge(graph[24],graph[26],1,1);
  makeEdge(graph[24],graph[11],2,2);
  makeEdge(graph[24],graph[29],2,2);
  makeEdge(graph[25],graph[5],177,32);
  makeEdge(graph[25],graph[79],5,3);
  makeEdge(graph[25],graph[8],1,1);
  makeEdge(graph[25],graph[17],2,2);
  makeEdge(graph[25],graph[25],4,4);
  makeEdge(graph[25],graph[15],8,4);
  makeEdge(graph[25],graph[45],8,4);
  makeEdge(graph[25],graph[84],1,1);
  makeEdge(graph[25],graph[97],3,3);
  makeEdge(graph[25],graph[26],15,7);
  makeEdge(graph[25],graph[11],6,2);
  makeEdge(graph[25],graph[69],1,1);
  makeEdge(graph[26],graph[9],42,7);
  makeEdge(graph[26],graph[8],23,16);
  makeEdge(graph[26],graph[0],18,5);
  makeEdge(graph[26],graph[25],9,5);
  makeEdge(graph[26],graph[71],1,1);
  makeEdge(graph[26],graph[21],2,1);
  makeEdge(graph[26],graph[10],26,11);
  makeEdge(graph[26],graph[4],1,1);
  makeEdge(graph[26],graph[3],12,10);
  makeEdge(graph[26],graph[19],2,2);
  makeEdge(graph[26],graph[11],15,10);
  makeEdge(graph[26],graph[99],2,2);
  makeEdge(graph[26],graph[5],96,20);
  makeEdge(graph[26],graph[13],4,1);
  makeEdge(graph[26],graph[20],2,2);
  makeEdge(graph[26],graph[17],2,2);
  makeEdge(graph[26],graph[106],4,4);
  makeEdge(graph[26],graph[62],2398,30);
  makeEdge(graph[26],graph[45],2,2);
  makeEdge(graph[26],graph[23],1,1);
  makeEdge(graph[26],graph[26],51,12);
  makeEdge(graph[26],graph[53],1,1);
  makeEdge(graph[27],graph[5],3,2);
  makeEdge(graph[28],graph[56],1,1);
  makeEdge(graph[28],graph[11],1,1);
  makeEdge(graph[29],graph[16],2,1);
  makeEdge(graph[29],graph[24],2,2);
  makeEdge(graph[29],graph[114],2,2);
  makeEdge(graph[31],graph[115],9,1);
  makeEdge(graph[33],graph[74],1,1);
  makeEdge(graph[33],graph[21],1,1);
  makeEdge(graph[33],graph[5],12,8);
  makeEdge(graph[33],graph[72],1,1);
  makeEdge(graph[33],graph[33],1,1);
  makeEdge(graph[33],graph[103],2,1);
  makeEdge(graph[33],graph[2],1,1);
  makeEdge(graph[34],graph[16],16,4);
  makeEdge(graph[35],graph[1],1,1);
  makeEdge(graph[36],graph[23],1,1);
  makeEdge(graph[36],graph[56],1,1);
  makeEdge(graph[37],graph[21],29,1);
  makeEdge(graph[37],graph[12],1,1);
  makeEdge(graph[38],graph[83],6,4);
  makeEdge(graph[38],graph[5],43,3);
  makeEdge(graph[39],graph[14],1,1);
  makeEdge(graph[39],graph[5],1,1);
  makeEdge(graph[39],graph[72],2,1);
  makeEdge(graph[39],graph[12],5,4);
  makeEdge(graph[42],graph[89],1,1);
  makeEdge(graph[44],graph[11],1,1);
  makeEdge(graph[45],graph[1],7,1);
  makeEdge(graph[45],graph[15],1,1);
  makeEdge(graph[45],graph[86],1,1);
  makeEdge(graph[45],graph[45],1,1);
  makeEdge(graph[45],graph[5],1,1);
  makeEdge(graph[45],graph[93],1,1);
  makeEdge(graph[45],graph[24],2,1);
  makeEdge(graph[45],graph[76],1,1);
  makeEdge(graph[45],graph[11],3,3);
  makeEdge(graph[45],graph[25],6,3);
  makeEdge(graph[47],graph[22],13,3);
  makeEdge(graph[47],graph[8],15,10);
  makeEdge(graph[47],graph[9],2,2);
  makeEdge(graph[47],graph[10],1,1);
  makeEdge(graph[47],graph[47],34,16);
  makeEdge(graph[47],graph[17],10,8);
  makeEdge(graph[48],graph[1],1,1);
  makeEdge(graph[48],graph[71],1,1);
  makeEdge(graph[48],graph[5],1,1);
  makeEdge(graph[48],graph[93],7,2);
  makeEdge(graph[49],graph[5],2,2);
  makeEdge(graph[51],graph[56],1,1);
  makeEdge(graph[52],graph[98],2,2);
  makeEdge(graph[52],graph[101],2,2);
  makeEdge(graph[53],graph[26],2,1);
  makeEdge(graph[54],graph[5],1,1);
  makeEdge(graph[55],graph[0],1,1);
  makeEdge(graph[56],graph[51],1,1);
  makeEdge(graph[56],graph[102],8,4);
  makeEdge(graph[56],graph[23],26,7);
  makeEdge(graph[56],graph[5],5,4);
  makeEdge(graph[56],graph[114],1,1);
  makeEdge(graph[56],graph[33],1,1);
  makeEdge(graph[56],graph[103],7,3);
  makeEdge(graph[56],graph[16],1,1);
  makeEdge(graph[56],graph[24],3,2);
  makeEdge(graph[58],graph[1],4,3);
  makeEdge(graph[58],graph[101],25,6);
  makeEdge(graph[58],graph[3],5,2);
  makeEdge(graph[58],graph[0],1,1);
  makeEdge(graph[62],graph[1],4,1);
  makeEdge(graph[62],graph[7],1,1);
  makeEdge(graph[62],graph[99],2,2);
  makeEdge(graph[62],graph[10],11,4);
  makeEdge(graph[62],graph[26],2396,30);
  makeEdge(graph[62],graph[3],1,1);
  makeEdge(graph[62],graph[11],1,1);
  makeEdge(graph[64],graph[94],1,1);
  makeEdge(graph[64],graph[113],1,1);
  makeEdge(graph[64],graph[5],280,3);
  makeEdge(graph[64],graph[114],848,13);
  makeEdge(graph[64],graph[2],1,1);
  makeEdge(graph[65],graph[94],1,1);
  makeEdge(graph[65],graph[113],1,1);
  makeEdge(graph[65],graph[5],280,3);
  makeEdge(graph[65],graph[114],848,13);
  makeEdge(graph[65],graph[2],1,1);
  makeEdge(graph[66],graph[5],1,1);
  makeEdge(graph[67],graph[15],1,1);
  makeEdge(graph[67],graph[67],1,1);
  makeEdge(graph[67],graph[10],1,1);
  makeEdge(graph[67],graph[19],2,2);
  makeEdge(graph[68],graph[1],2,2);
  makeEdge(graph[68],graph[14],69,1);
  makeEdge(graph[68],graph[5],13,6);
  makeEdge(graph[68],graph[110],4,2);
  makeEdge(graph[68],graph[3],3,1);
  makeEdge(graph[69],graph[15],2,2);
  makeEdge(graph[69],graph[71],1,1);
  makeEdge(graph[69],graph[22],1,1);
  makeEdge(graph[69],graph[45],1,1);
  makeEdge(graph[69],graph[10],1,1);
  makeEdge(graph[69],graph[5],1,1);
  makeEdge(graph[70],graph[109],3,2);
  makeEdge(graph[70],graph[5],1,1);
  makeEdge(graph[71],graph[8],1,1);
  makeEdge(graph[71],graph[5],2,2);
  makeEdge(graph[71],graph[97],2,2);
  makeEdge(graph[71],graph[25],2,2);
  makeEdge(graph[72],graph[1],1,1);
  makeEdge(graph[72],graph[16],1,1);
  makeEdge(graph[72],graph[39],1,1);
  makeEdge(graph[72],graph[14],1,1);
  makeEdge(graph[72],graph[5],3,3);
  makeEdge(graph[73],graph[14],1,1);
  makeEdge(graph[74],graph[1],1,1);
  makeEdge(graph[74],graph[22],1,1);
  makeEdge(graph[74],graph[5],74,25);
  makeEdge(graph[74],graph[12],1,1);
  makeEdge(graph[74],graph[33],1,1);
  makeEdge(graph[74],graph[103],1,1);
  makeEdge(graph[74],graph[3],1,1);
  makeEdge(graph[74],graph[25],1,1);
  makeEdge(graph[75],graph[5],157,1);
  makeEdge(graph[76],graph[45],1,1);
  makeEdge(graph[76],graph[101],2,2);
  makeEdge(graph[76],graph[5],1,1);
  makeEdge(graph[76],graph[20],25,5);
  makeEdge(graph[79],graph[79],4,1);
  makeEdge(graph[79],graph[22],1,1);
  makeEdge(graph[79],graph[3],1,1);
  makeEdge(graph[79],graph[97],13,5);
  makeEdge(graph[79],graph[25],5,3);
  makeEdge(graph[80],graph[1],25,3);
  makeEdge(graph[80],graph[5],18,6);
  makeEdge(graph[81],graph[5],2329,18);
  makeEdge(graph[82],graph[22],1,1);
  makeEdge(graph[82],graph[94],1,1);
  makeEdge(graph[82],graph[5],659,12);
  makeEdge(graph[82],graph[114],310,4);
  makeEdge(graph[83],graph[100],1,1);
  makeEdge(graph[83],graph[23],8,4);
  makeEdge(graph[83],graph[5],359,19);
  makeEdge(graph[83],graph[38],4,4);
  makeEdge(graph[84],graph[5],1,1);
  makeEdge(graph[86],graph[15],67,7);
  makeEdge(graph[86],graph[45],6,6);
  makeEdge(graph[86],graph[23],3,3);
  makeEdge(graph[86],graph[5],6,5);
  makeEdge(graph[86],graph[12],1,1);
  makeEdge(graph[86],graph[114],1,1);
  makeEdge(graph[86],graph[16],4,4);
  makeEdge(graph[86],graph[3],132,7);
  makeEdge(graph[86],graph[11],2,2);
  makeEdge(graph[87],graph[23],1,1);
  makeEdge(graph[87],graph[5],38,1);
  makeEdge(graph[88],graph[89],1,1);
  makeEdge(graph[88],graph[99],1,1);
  makeEdge(graph[88],graph[9],394,8);
  makeEdge(graph[88],graph[23],91,8);
  makeEdge(graph[88],graph[5],4,3);
  makeEdge(graph[88],graph[11],1,1);
  makeEdge(graph[88],graph[108],15,3);
  makeEdge(graph[89],graph[88],2,2);
  makeEdge(graph[89],graph[11],42,1);
  makeEdge(graph[89],graph[108],9,1);
  makeEdge(graph[90],graph[92],660,5);
  makeEdge(graph[91],graph[5],2,1);
  makeEdge(graph[92],graph[90],659,5);
  makeEdge(graph[93],graph[48],9,2);
  makeEdge(graph[93],graph[3],3,3);
  makeEdge(graph[94],graph[22],4,1);
  makeEdge(graph[94],graph[65],2,2);
  makeEdge(graph[94],graph[109],1,1);
  makeEdge(graph[94],graph[9],2,2);
  makeEdge(graph[94],graph[70],3,2);
  makeEdge(graph[94],graph[5],78,11);
  makeEdge(graph[94],graph[56],3,2);
  makeEdge(graph[94],graph[92],1,1);
  makeEdge(graph[94],graph[103],1,1);
  makeEdge(graph[94],graph[16],5,3);
  makeEdge(graph[94],graph[24],1,1);
  makeEdge(graph[94],graph[11],1,1);
  makeEdge(graph[94],graph[25],2,1);
  makeEdge(graph[95],graph[8],1,1);
  makeEdge(graph[95],graph[12],23,4);
  makeEdge(graph[96],graph[26],1,1);
  makeEdge(graph[97],graph[15],1,1);
  makeEdge(graph[97],graph[79],11,4);
  makeEdge(graph[97],graph[110],1,1);
  makeEdge(graph[97],graph[23],1,1);
  makeEdge(graph[97],graph[5],1,1);
  makeEdge(graph[98],graph[5],1,1);
  makeEdge(graph[98],graph[12],2,1);
  makeEdge(graph[98],graph[68],1,1);
  makeEdge(graph[99],graph[9],1,1);
  makeEdge(graph[99],graph[88],2,1);
  makeEdge(graph[99],graph[5],17,12);
  makeEdge(graph[99],graph[91],1,1);
  makeEdge(graph[99],graph[24],1,1);
  makeEdge(graph[99],graph[17],5,1);
  makeEdge(graph[99],graph[1],1,1);
  makeEdge(graph[99],graph[86],1,1);
  makeEdge(graph[99],graph[62],1,1);
  makeEdge(graph[99],graph[23],4,3);
  makeEdge(graph[99],graph[3],2,2);
  makeEdge(graph[99],graph[26],1,1);
  makeEdge(graph[99],graph[11],3,2);
  makeEdge(graph[99],graph[108],3,3);
  makeEdge(graph[99],graph[107],1,1);
  makeEdge(graph[100],graph[45],1,1);
  makeEdge(graph[100],graph[83],1,1);
  makeEdge(graph[100],graph[5],287,26);
  makeEdge(graph[100],graph[103],3,2);
  makeEdge(graph[100],graph[11],1,1);
  makeEdge(graph[101],graph[9],1,1);
  makeEdge(graph[101],graph[5],35,23);
  makeEdge(graph[101],graph[0],2,2);
  makeEdge(graph[101],graph[1],11,7);
  makeEdge(graph[101],graph[52],1,1);
  makeEdge(graph[101],graph[102],1,1);
  makeEdge(graph[101],graph[23],1,1);
  makeEdge(graph[101],graph[14],1,1);
  makeEdge(graph[101],graph[10],1,1);
  makeEdge(graph[101],graph[4],2,2);
  makeEdge(graph[101],graph[58],16,4);
  makeEdge(graph[101],graph[11],1,1);
  makeEdge(graph[102],graph[22],1,1);
  makeEdge(graph[102],graph[5],21,16);
  makeEdge(graph[102],graph[1],2,2);
  makeEdge(graph[102],graph[100],1,1);
  makeEdge(graph[102],graph[14],10,1);
  makeEdge(graph[102],graph[56],6,3);
  makeEdge(graph[102],graph[103],2,2);
  makeEdge(graph[102],graph[11],3,3);
  makeEdge(graph[103],graph[1],2,2);
  makeEdge(graph[103],graph[7],1,1);
  makeEdge(graph[103],graph[9],1,1);
  makeEdge(graph[103],graph[102],2,2);
  makeEdge(graph[103],graph[87],1,1);
  makeEdge(graph[103],graph[5],16,11);
  makeEdge(graph[103],graph[56],8,3);
  makeEdge(graph[103],graph[8],1,1);
  makeEdge(graph[103],graph[3],4,4);
  makeEdge(graph[103],graph[26],1,1);
  makeEdge(graph[103],graph[11],8,6);
  makeEdge(graph[103],graph[17],2,2);
  makeEdge(graph[104],graph[14],419,9);
  makeEdge(graph[105],graph[15],2,1);
  makeEdge(graph[105],graph[1],2,2);
  makeEdge(graph[105],graph[5],2,1);
  makeEdge(graph[105],graph[12],5,4);
  makeEdge(graph[106],graph[26],6,6);
  makeEdge(graph[106],graph[3],1,1);
  makeEdge(graph[107],graph[7],2,2);
  makeEdge(graph[107],graph[26],1,1);
  makeEdge(graph[107],graph[5],1,1);
  makeEdge(graph[107],graph[91],1,1);
  makeEdge(graph[107],graph[4],1,1);
  makeEdge(graph[108],graph[89],6,1);
  makeEdge(graph[108],graph[9],2108,24);
  makeEdge(graph[108],graph[23],1,1);
  makeEdge(graph[108],graph[88],16,3);
  makeEdge(graph[108],graph[5],14,2);
  makeEdge(graph[108],graph[11],1,1);
  makeEdge(graph[109],graph[99],1,1);
  makeEdge(graph[109],graph[23],40,8);
  makeEdge(graph[109],graph[5],3,2);
  makeEdge(graph[109],graph[92],3,3);
  makeEdge(graph[109],graph[2],1,1);
  makeEdge(graph[110],graph[1],1,1);
  makeEdge(graph[110],graph[102],1,1);
  makeEdge(graph[110],graph[5],6,4);
  makeEdge(graph[110],graph[56],1,1);
  makeEdge(graph[111],graph[37],1,1);
  makeEdge(graph[111],graph[12],3,2);
  makeEdge(graph[112],graph[5],347,4);
  makeEdge(graph[112],graph[114],119,2);
  makeEdge(graph[113],graph[65],1,1);
  makeEdge(graph[113],graph[23],3,2);
  makeEdge(graph[113],graph[10],4,4);
  makeEdge(graph[113],graph[5],26,19);
  makeEdge(graph[113],graph[114],1,1);
  makeEdge(graph[113],graph[11],7,7);
  makeEdge(graph[113],graph[17],1,1);
  makeEdge(graph[114],graph[112],124,1);
  makeEdge(graph[114],graph[21],1,1);
  makeEdge(graph[114],graph[65],847,13);
  makeEdge(graph[114],graph[23],1,1);
  makeEdge(graph[114],graph[5],494,4);
  makeEdge(graph[114],graph[56],1,1);
  makeEdge(graph[114],graph[16],2,2);
  makeEdge(graph[114],graph[3],1,1);
  makeEdge(graph[114],graph[11],7,3);
  makeEdge(graph[114],graph[29],2,2);
  makeEdge(graph[114],graph[82],310,4);
  makeEdge(graph[115],graph[21],152,3);
  makeEdge(graph[115],graph[5],13,6);
  makeEdge(graph[115],graph[11],18,4);
  makeEdge(graph[115],graph[12],4,1);
  makeEdge(graph[115],graph[93],1,1);
}

function interpolate(d,p){
  var arr = new Array(4);
  var d2 = d/2;
  // var d2 = 8;
  for(var i = 0; i<4; i++) arr[i] = new Array(3);
  arr[0][0] = d*d;
  arr[0][1] = d;
  arr[0][2] = 1;
  arr[0][3] = 0;
  arr[1][0] = d2*d2;
  arr[1][1] = d2;
  arr[1][2] = 1;
  arr[1][3] = p;
  arr[2][0] = 0;
  arr[2][1] = 0;
  arr[2][2] = 1;
  arr[2][3] = 0;
  for(var i=0; i<3; i++){
    var temp = arr[i][i];
    for(var o=i; o<4; o++) arr[i][o]/=temp;
    for(var o=i+1; o<3; o++){
      var temp2 = arr[o][i];
      for(var u=i; u<4; u++) arr[o][u]-=(temp2*arr[i][u]);
    }
  }
  for(var i=1; i>=0; i--){
    for(var o=2;o>i; o--){
      arr[i][3]-=(arr[i][o]*arr[o][3]);
      arr[i][o] = 0;
    }
  }
  var ret = [];
  for(var i=0; i<3; i++) ret.push(arr[i][3]);
  return ret;
}

function makePath(p1,p2){
  var x1 = p1.position.lng();
  var y1 = p1.position.lat();
  var x2 = p2.position.lng();
  var y2 = p2.position.lat();
  var curve = [];
  curve.push(p1.position);
  var dist = Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));
  var angle = Math.atan2(y2-y1,x2-x1);
  var arr = interpolate(dist,dist/8);
  var cosAngle = Math.cos(angle);
  var sinAngle = Math.sin(angle);
  for(var i=1; i<sections; i++){
    var xt = i/sections*dist;
    var yt = xt*xt*arr[0]+xt*arr[1]+arr[2];
    var nx = xt*cosAngle-yt*sinAngle+x1;
    var ny = xt*sinAngle+yt*cosAngle+y1;
    curve.push(new google.maps.LatLng(ny,nx));
  }
  curve.push(p2.position);
  return curve;
}

function initialize(){
  var mapOptions = {
    center: new google.maps.LatLng(12.09614271997099, 123.07809066772461),
    zoom: 6,
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),mapOptions);
  map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(document.getElementById('info-window'));
  initGraph();
  for (var i = 0; i < graph.length; i++) graph[i].marker.setMap(map);
}
google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </body>
</html>