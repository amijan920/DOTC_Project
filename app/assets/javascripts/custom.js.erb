var templates = {};
var mapDisplay;


// helper methods
function computeLatitude(port) {
	return (parseFloat(port.lat_deg) + parseFloat(port.lat_min)/60 + parseFloat(port.lat_sec)/3600);
}

function computeLongitude(port) {
	return (parseFloat(port.lon_deg) + parseFloat(port.lon_min)/60 + parseFloat(port.lon_sec)/3600);
}

function getLatLng(port) {
	var lat = computeLatitude(port);
	var lon = computeLongitude(port);
	var latlng = new google.maps.LatLng(lat, lon);
	return latlng;
}

function compileTemplates() {
	var source   = $("#carousel-inner-template").html();
	templates["carousel-inner"] = Handlebars.compile(source);

	source   = $("#additional-info-template").html();
	templates["additional-info"] = Handlebars.compile(source);

	source   = $("#info-window-template").html();
	templates["info-window"] = Handlebars.compile(source);

	source   = $("#routes-info-template").html();
	templates["routes-info"] = Handlebars.compile(source);
}

// mapUI
var MapUI = (function() {
	function MapUI(ports, images, infos) {
		this.ports = ports;
		this.images = images;
		this.infos = infos;
		this.activePort = null;
		this.uiView = "details";
		this.mapDisplay = null;
		this.mapState = "none";

		this.originPort = null;
		this.destinationPort = null;

		$("#view-routes").click((function(_this) {
			return function(e) {
				_this.setOriginPort(null);
				_this.setDestinationPort(_this.activePort);
				_this.switchView();
				_this.mapState="origin";
			}
		})(this));
	}

	MapUI.prototype.setOriginPort = function(origin) {
		this.originPort = origin;
		if(origin == null)
			$("#origin-text").val("");
		else
			$("#origin-text").val(this.originPort.name);
		this.getRoute();
	}

	MapUI.prototype.setDestinationPort = function(destination) {
		this.destinationPort = destination;
		if(destination == null)
			$("#destination-text").val("");
		else
			$("#destination-text").val(this.destinationPort.name);
		this.getRoute();
	}

	MapUI.prototype.getRoute = function() {
		if(this.destinationPort == null || this.originPort == null) {
			$("#routes-container").slideUp();
			return;
		}
		routeData = {
			routeList: [ 
			{
				id: 1,
				name: "Direct",
				departure: "4:00",
				arrival:"5:30",
				flightPath: [
					{
						flightId: 1,
						origin: this.ports[115],
						destination: this.ports[142],
						departure: "4:00",
						arrival: "5:30"
					}
				]
			},
			{
				id: 2,
				name: "With Stop Over",
				departure: "4:00",
				arrival:"7:30",
				flightPath: [
					{
						flightId: 2,
						origin: this.ports[115],
						destination: this.ports[174],
						departure: "4:00",
						arrival: "6:00"
					},
					{
						flightId: 1,
						origin: this.ports[174],
						destination: this.ports[142],
						departure: "6:00",
						arrival: "7:30"
					}
				]
			}
		] };

		$.ajax({
      type: "POST",
      url: "getRoutes",
      data: { origin_id: 0, destination_id: 1 },
      success: function(data) {
        console.log(data);
        return false;
      },
      error: function(data) {
      	return false;
      }
    })

		this.showRoute(routeData);
	}

	MapUI.prototype.showRoute = function(data) {
		$("#routes-container").slideDown();
		$("#routes-info > .scroll-container").html("");


	  var string = templates["routes-info"](data);
	  $("#routes-info > .scroll-container").html(string);

		for(var i = 0; i < data.routeList.length; i++) {
			var flightPath = [];
			flightPath.push(data.routeList[i].flightPath[0].origin);
			flightPath.push(data.routeList[i].flightPath[0].destination);
			for(var j = 1; j < data.routeList[i].flightPath.length; j++) {
				flightPath.push(data.routeList[i].flightPath[i].destination);
			}
			this.createRouteVisualization("#route-"+ data.routeList[i].id +" .route-visualization", flightPath);
		}

		// this.createRouteVisualization("#route-1 .route-visualization", [this.ports[115], this.ports[142]]);
		// this.createRouteVisualization("#route-2 .route-visualization", [this.ports[115], this.ports[174], this.ports[142]]);
		// this.mapDisplay.showRoute([this.ports[115], this.ports[174], this.ports[142]]);
	}

	MapUI.prototype.setMapDisplay = function(mapDisplay) {
		this.mapDisplay = mapDisplay;
	}

	MapUI.prototype.setActivePort = function(id) {
		var index = this.getPortIndexViaId(id);
		var port = this.ports[index];
		var imageList = this.images[index];
		var infoList = this.infos[index];

		this.activePort = port;

	  // $("#panel-title").html(port.name);
	  $("#name-container .bold").html(port.name);
	  $("#name-container #description.small-desc").html(port.description);

	  // if(port.category_id == 2)
	  	$("#view-routes").show();
	  // else
	  // 	$("#view-routes").hide();
	  
	  // prep image carousel
	  if(imageList.length > 0) {
	  	var data = {};
	  	data.imageList = imageList;

	  	var string = templates["carousel-inner"](data);
	  	$("#images-container .carousel-inner").html(string);

	  	$("#images-container").slideDown(400);
	  	$(".navigation").each(function() {
				$(this).fadeIn(400);
			});

			$('#images-container').carousel()
	  }
	  else {
	  	$(".navigation").each(function() {
				$(this).fadeOut(400);
			})
	  	$("#images-container").slideUp(400);
	  	$("#images-container .carousel-inner").html();
	  }

	  // prep additional info box
	  if(infoList.length > 0) {
	  	var data = {};
	  	data.infoList = infoList;

	  	var string = templates["additional-info"](data);
	  	$("#info-container .scroll-container").html(string);

	  	$("#info-container").slideDown(400);
	  }
	  else {
	  	$("#info-container").slideUp(400);
	  	$("#info-container .scroll-container").html("");
	  }
	}

	MapUI.prototype.getPortIndexViaId = function(id) {
		for(var i = 0; i < this.ports.length; i++) {
			if(this.ports[i].id == id) {
				return i;
			}
		}
	}

	MapUI.prototype.getPortViaId = function(id) {
		for(var i = 0; i < this.ports.length; i++) {
			if(this.ports[i].id == id) {
				return this.ports[i];
			}
		}
	}

	MapUI.prototype.switchView = function() {
		if(this.uiView == "flights") {
			$("#port-details").slideDown();
			$("#routes-display").slideUp();
			$("#panel-title").html("Port Details");
			this.uiView = "details";
		}
		else {
			$("#routes-display").slideDown();
			$("#port-details").slideUp();
			$("#panel-title").html("Routes");
			this.uiView = "flights";
		}
	}

	MapUI.prototype.createRouteVisualization = function(selector, data) {
		// console.log(data);
		var div = $(selector);
		d3.select(selector).selectAll("*").remove();

		var width = div.width(),
			height = div.height();

		var vis = d3.select(selector)
				.append("svg")
				.attr("width", width)
				.attr("height", height)
				.attr("id", "svg_vis");

		// console.log(data);

		var circles = vis.selectAll("circle")
			.data(data, function(d) {
					return d.id;
				});

		// console.log(circles);
		var padding = 10;
		var interval = (width-padding*2)/(data.length-1);

		vis.append("line")
			.attr("x1", padding)
			.attr("y1", height/2)
			.attr("x2", (width-padding))
			.attr("y2", height/2)
			.attr("stroke-width", 4)
			.attr("stroke", "#444444");

		var tip = d3.tip()
		  .offset([-10, 0])
		  .html(function(d) {
		  	// trafficValue *= trafficValue;
		  	// Math.sqrt(((data[i][j]/2 * 25  ) + 5) / Math.PI ) * 7
		    return "<span>" + d.name + "</span>";
			})
			.attr("class", "d3-tip");

		circles
			.enter()
			.append("circle")
			.attr("r", 8)
			.attr("fill", "#444444")
			.attr("class", "airport-circle")
			.attr("cx", function(d, i) {
				return padding + i*interval;
			})
			.attr("cy", function(d, i) {
				return height/2;
			})
			.on('mouseover', (function(_this){
				return function(d) {
					tip.attr("class", "d3-tip");
					tip.show(d);
					$(this).attr("fill", "#44AA44");
				}
			})(this))
	    .on('mouseout', (function(_this){
				return function(d) {
					tip.hide(d);
					$(this).attr("fill", "#444444");
				}
			})(this))
			.on('click', (function(_this) {
				return function(d) {
					var id = d.id;
					_this.mapDisplay.panToMarker(id);
					var port = _this.getPortViaId(id);
					console.log(port.category_id);
				}
			})(this))

		vis.call(tip);
	}

	return MapUI;
})();


// map display
var MapDisplay = (function() {
	function MapDisplay(ports, mapUI) {
	  this.ports = ports;
	  this.mapUI = mapUI;

	  mapUI.setActivePort(4);

		var mapOptions = {
	    center: { lat: 14, lng: 121},
	    zoom: 10,
	    disableDefaultUI: true
	  };

	  this.map = new google.maps.Map(document.getElementById('map'), mapOptions);
	  this.portMarkers = [];
	  this.infowindow = new google.maps.InfoWindow({
	      content: ""
	  });
	  this.cat_vis = {};

	  for(var i = 0; i < categories.length; i++) {
	  	this.cat_vis[categories[i].id] = true;
	  }

	  for(var i = 0; i < this.ports.length; i++) {
	  	var pinIcon = new google.maps.MarkerImage(
		    categoryMarkers[this.ports[i].category_id],
		    null, /* size is determined at runtime */
		    null, /* origin is 0,0 */
		    null, /* anchor is bottom center of the scaled image */
		    new google.maps.Size(28, 46)
			);  

	  	// var iconImage = {
		  // 	url: categoryMarkers[ports[i].category_id]
		  // 	// anchor: new google.maps.Point(16,16)
		  // }

	  	var marker = new google.maps.Marker({
			  map: this.map,
			  position: getLatLng(this.ports[i]),
			  title: this.ports[i].name,
			  icon: pinIcon,//categoryMarkers[this.ports[i].category_id],//iconImage,
			  data_category: this.ports[i].category_id,
			  data_hidden: false,
			  data_id: this.ports[i].id,
			  index: i,
			  opacity:1
			})

	  	this.portMarkers.push(marker);

			google.maps.event.addListener(marker, 'click', (function(_marker, _this) {
				return function() {
			    _this.mapUI.setActivePort(_marker.data_id);
			    _this.map.panTo(_marker.position);

			    if(_this.mapUI.mapState == "origin") {
			    	_this.mapUI.setOriginPort(_this.ports[_marker.index]);
			    }
			    if(_this.mapUI.mapState == "destination") {
			    	_this.mapUI.setDestinationPort(_this.ports[_marker.index]);
			    }

			    var string = templates["info-window"](_this.ports[_marker.index]);
			    _this.infowindow.setContent(string);
			    _this.infowindow.open(_this.map, _marker);
			  }
			})(marker, this));
	  }
	}

	MapDisplay.prototype.panToMarker = function(id) {
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_id == id) {
				this.map.panTo(this.portMarkers[i].position);
				this.portMarkers[i].setMap(this.map);

				var string = templates["info-window"](this.ports[i]);
			  this.infowindow.setContent(string);
			  this.infowindow.open(this.map, this.portMarkers[i]);

				this.mapUI.setActivePort(id);
			}
		}
	}

	MapDisplay.prototype.toggleLayer = function(id) {
		if(this.cat_vis[id] == true) {
			this.hideLayer(id);
			return false;
		}
		else {
			this.showLayer(id);
			return true;
		}
	}

	MapDisplay.prototype.hideLayer = function(id) {
		if(this.cat_vis[i] == false)
			return;
		this.cat_vis[id] = false;
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_category == id) {
				this.portMarkers[i].setMap(null);
				this.portMarkers[i].data_hidden = true;
			}
		}
	}

	MapDisplay.prototype.showLayer = function(id) {
		if(this.cat_vis[i] == true)
			return;
		this.cat_vis[id] = true;
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_category == id) {
				this.portMarkers[i].setMap(this.map);
				this.portMarkers[i].data_hidden = false;
			}
		}
	}

	MapDisplay.prototype.showRoute = function(path) {
		var flightPathCoordinates = [];
		for(var i = 0; i < path.length; i++) {
			flightPathCoordinates.push(getLatLng(path[i]));
		}

		var flightPath = new google.maps.Polyline({
	    path: flightPathCoordinates,
	    geodesic: true,
	    strokeColor: '#FF0000',
	    strokeOpacity: 1.0,
	    strokeWeight: 4
	  });

	  flightPath.setMap(this.map);
	}
	return MapDisplay;
})();

function portsViewScript() {
 var ports_table = $('#points').dynatable({
	  features: {
	    paginate: false,
	    recordCount: false,
	    sorting: false,
	    search:false
	  }
	}).data('dynatable');
 console.log(ports_table);

	$("#filter-ports").keyup(function() {
		var value = $(this).val();
	  ports_table.queries.runSearch(value);//add("name",value);
	});
}

function ready() {
	if(view === "ports") {
		portsViewScript();
		return;
	}

	compileTemplates();

	mapUI = new MapUI(ports, images, infos);
	mapDisplay = new MapDisplay(ports, mapUI);
	mapUI.setMapDisplay(mapDisplay);

	$(".filter-image").click(function(e) {
		var visible = mapDisplay.toggleLayer($(this).data("category"));
		$(this).toggleClass("gray", !visible);
	});
	
	$("#panel-title").click(function() {
		mapUI.switchView();
	});
}

$(document).ready(ready)
$(document).on('page:load', ready)
