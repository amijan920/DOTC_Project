var templates = {};
var mapDisplay;
var train_id = 4; 

// helper methods
function computeLatitude(port) {
	return (parseFloat(port.lat_deg) + parseFloat(port.lat_min)/60 + parseFloat(port.lat_sec)/3600);
}

function computeLongitude(port) {
	return (parseFloat(port.lon_deg) + parseFloat(port.lon_min)/60 + parseFloat(port.lon_sec)/3600);
}

function getLatLng(port) {
	var lat = computeLatitude(port);
	var lon = computeLongitude(port);
	var latlng = new google.maps.LatLng(lat, lon);
	return latlng;
}

function compileTemplates() {
	Handlebars.registerHelper('breaklines', function(text) {
	    text = Handlebars.Utils.escapeExpression(text);
	    text = text.replace(/(\r\n|\n|\r)/gm, '<br>');
	    return new Handlebars.SafeString(text);
	});

	Handlebars.registerHelper('format_time', function(text) {
	    return text.substring(text.indexOf("T") + 1, text.indexOf("T") + 9);
	});

	Handlebars.registerHelper('get_days', function(days) {
			if(days == 127)
				return "Daily";
			var str = "";
			if (((1<<6) & days) > 0)
				str += "Mo | ";
			if (((1<<5) & days) > 0)
				str += "Tu | ";
			if (((1<<4) & days) > 0)
				str += "We | ";
			if (((1<<3) & days) > 0)
				str += "Th | ";
			if (((1<<2) & days) > 0)
				str += "Fr | ";
			if (((1<<1) & days) > 0)
				str += "Sa | ";
			if (((1<<0) & days) > 0)
				str += "Su | ";

			if(str.length > 0)
				return str.substring(0, str.length - 3);
	});

	var source   = $("#carousel-inner-template").html();
	templates["carousel-inner"] = Handlebars.compile(source);

	source   = $("#additional-info-template").html();
	templates["additional-info"] = Handlebars.compile(source);

	source   = $("#info-window-template").html();
	templates["info-window"] = Handlebars.compile(source);

	source   = $("#routes-info-template").html();
	templates["routes-info"] = Handlebars.compile(source);

	source   = $("#routes-options-template").html();
	templates["routes-options"] = Handlebars.compile(source);

	source   = $("#no-routes-template").html();
	templates["no-routes"] = Handlebars.compile(source);
}

// mapUI
var MapUI = (function() {
	function MapUI(ports, images, infos) {
		this.ports = ports;
		this.images = images;
		this.infos = infos;
		this.activePort = null;
		this.uiView = "details";
		this.mapDisplay = null;
		this.mapState = "none";
		this.currentRouteList = null;
		this.activeRoute = -1;
		this.visualizations = null;

		this.originPort = null;
		this.destinationPort = null;
		$("#view-routes").click((function(_this) {
			return function(e) {
				_this.setOriginPort(null);
				_this.setDestinationPort(_this.activePort);
				_this.switchView();
				_this.mapState = "origin";
			}
		})(this));

		$("#origin-text").click((function(_this) {
			return function(e) {
				this.select();
				_this.mapState = "origin";
			}
		})(this));

		$("#destination-text").click((function(_this) {
			return function(e) {
				this.select();
				_this.mapState = "destination";
			}
		})(this));
	}

	MapUI.prototype.setOriginPort = function(origin) {
		this.originPort = origin;
		if(origin == null)
			$("#origin-text").val("");
		else
			$("#origin-text").val(this.originPort.name);
		if(origin != null)
			this.setActivePort(origin.id);

		$("#routes-options-container").slideUp(400, function(c) {
			$("#routes-options .scroll-container").html("");
		});

		this.getRoute();
	}

	MapUI.prototype.setDestinationPort = function(destination) {
		this.destinationPort = destination;
		if(destination == null)
			$("#destination-text").val("");
		else
			$("#destination-text").val(this.destinationPort.name);
		if(destination != null)
			this.setActivePort(destination.id);

		$("#routes-options-container").slideUp(400, function(c) {
			$("#routes-options .scroll-container").html("");
		});

		this.getRoute();
	}

	MapUI.prototype.getRoute = function() {
		if(this.destinationPort == null || this.originPort == null) {
			$("#routes-container").slideUp();
			return;
		}

		$.ajax({
      type: "POST",
      url: get_routes,
      data: { origin_id: this.originPort.id, destination_id: this.destinationPort.id },
      success: (function(_this){
				return function(data) {
	        console.log(data);
	        _this.currentRouteList = data.data;
	        _this.showRoute(data.data);
					// _this.mapDisplay.showRoute(data.data.routeList[0]);
	        return false;
	      }
			})(this),
      error: function(data) {
      	return false;
      }
    })

		// this.showRoute(routeData);
		// this.mapDisplay.showRoute(routeData);
	}

	MapUI.prototype.showRoute = function(data) {
		$("#routes-container").slideDown();
		$("#routes-info > .scroll-container").html("");
		this.activeRoute = -1;

	  var string = templates["routes-info"](data);
	  $("#routes-info > .scroll-container").html(string);

	  this.visualizations = {};
		for(var i = 0; i < data.routeList.length; i++) {
			this.visualizations[data.routeList[i].id] = this.createRouteVisualization("#route-"+ data.routeList[i].id +" .route-visualization", data.routeList[i]);
		}

	  $(".route-info").click((function(_this) {
	  	return function(e) {
	  		if(_this.activeRoute == $(this).data("rid")) {
	  			return;
	  		}

	  		_this.activeRoute = $(this).data("rid");
	  		_this.mapDisplay.showRoute(_this.currentRouteList.routeList[$(this).data("id")]);

	  		for(var i = 0; i < _this.currentRouteList.routeList.length; i++) {
					if(_this.currentRouteList.routeList[i].id == $(this).data("rid")) {
						$("#route-"+_this.currentRouteList.routeList[i].id).slideDown();
					}
					else {
						$("#route-"+_this.currentRouteList.routeList[i].id).slideUp();
					}
				}
	  		// _this.showRouteOptions($(this).data("rid"), 0);

				// var lines = _this.visualizations[$(this).data("rid")].lines;

				// lines.each(function(d, i) {
				// 	if(i == 0) {
				// 		d.active = true;
				// 		$(this).attr("stroke", "#F16521");
				// 	}
				// 	else {
				// 		d.active = false;
				// 		$(this).attr("stroke", "#444444");
				// 	}
				// })
			}
	  })(this));

		if(data.routeList.length == 0) {
			string = templates["no-routes"](data);
	  	$("#routes-info > .scroll-container").html(string);
		}

		// this.createRouteVisualization("#route-1 .route-visualization", [this.ports[115], this.ports[142]]);
		// this.createRouteVisualization("#route-2 .route-visualization", [this.ports[115], this.ports[174], this.ports[142]]);
		// this.mapDisplay.showRoute([this.ports[115], this.ports[174], this.ports[142]]);
	}

	MapUI.prototype.showRouteOptions = function(routeListId, routeIndex) {
		for(var i = 0; i < this.currentRouteList.routeList.length; i++) {
			console.log(this.currentRouteList.routeList[i].id)
			if(this.currentRouteList.routeList[i].id == routeListId) {
				// $("#route-options").remove();
				// $("#route-"+routeListId).after("<div id=\"route-options\"></div>");
				
				var tempData = {}
				tempData.routeList = this.currentRouteList.routeList[i].routes[routeIndex];

				var string = templates["routes-options"](tempData);
				// string = "<div class=\"panel-sub\"><div class=\"bold\">Options</div>" + string +"</div>"; 
				// $("#route-options").html(string);


				$("#routes-options .scroll-container").html(string);
				$("#routes-options-container").slideDown();
			}
			else {
				$("#route-"+this.currentRouteList.routeList[i].id).slideUp();
			}
		}
	}

	MapUI.prototype.showAllRoutes = function() {
		for(var i = 0; i < this.currentRouteList.routeList.length; i++) {
			$("#route-"+this.currentRouteList.routeList[i].id).slideDown();

			this.visualizations[this.currentRouteList.routeList[i].id].lines
				.each(function(d, i) {
					d.active = false;
					$(this).attr("stroke", "#444444");
				})
		}

	}

	MapUI.prototype.setMapDisplay = function(mapDisplay) {
		this.mapDisplay = mapDisplay;
	}

	MapUI.prototype.setActivePort = function(id) {
		var index = this.getPortIndexViaId(id);
		var port = this.ports[index];
		var imageList = this.images[index];
		var infoList = this.infos[index];

		this.activePort = port;

		$("#init-instructions").hide();

		if($("#panel-title").html() == "Instructions") 
			$("#panel-title").html("Details");

	  // $("#panel-title").html(port.name);
	  $("#name-container .bold").html(port.name);
	  $("#name-container #description.small-desc").html(port.description.replace(/(?:\r\n|\r|\n)/g, '<br />'));

	  // if(port.category_id == 2)
	  	$("#view-routes").show();
	  // else
	  // 	$("#view-routes").hide();
	  
	  // prep image carousel
	  if(imageList.length > 0) {
	  	var data = {};
	  	data.imageList = imageList;

	  	var string = templates["carousel-inner"](data);
	  	$("#images-container .carousel-inner").html(string);

	  	$("#images-container").slideDown(400);
	  	$(".navigation").each(function() {
				$(this).fadeIn(400);
			});

			
			$('#images-container').carousel();

			$(".item.port-image img").each(function(e) {
				var parent = $(this).parent();
				$("<img/>")
			    .attr("src", $(this).attr("src"))
			    .load((function(_this) {
			    	return function() {
			        var pic_real_width = this.width; 
			        var pic_real_height = this.height;
			        if(pic_real_width/parent.width() > pic_real_height/parent.height()) {
				        $(_this).css("max-height", "100%")
				        $(_this).css("max-width", "none")
			        }
				    }
			    })(this));

			});
	  }
	  else {
	  	$(".navigation").each(function() {
				$(this).fadeOut(400);
			})
	  	$("#images-container").slideUp(400);
	  	$("#images-container .carousel-inner").html();
	  }

	  // prep additional info box
	  if(infoList.length > 0) {
	  	var data = {};
	  	data.infoList = infoList;

	  	var string = templates["additional-info"](data);
	  	$("#info-container .scroll-container").html(string);

	  	$("#info-container").slideDown(400);
	  }
	  else {
	  	$("#info-container").slideUp(400);
	  	$("#info-container .scroll-container").html("");
	  }
	}

	MapUI.prototype.getPortIndexViaId = function(id) {
		for(var i = 0; i < this.ports.length; i++) {
			if(this.ports[i].id == id) {
				return i;
			}
		}
	}

	MapUI.prototype.getPortViaId = function(id) {
		for(var i = 0; i < this.ports.length; i++) {
			if(this.ports[i].id == id) {
				return this.ports[i];
			}
		}
	}

	MapUI.prototype.switchView = function(spec) {
		$("#init-instructions").hide();
		if(spec == null) {
			if(this.uiView == "flights") {
				$("#port-details").slideDown();
				$("#routes-display").slideUp(400, function(d) {
					$("#routes-info .scroll-container").html("");
				});
				$("#routes-options-container").slideUp(400, function(c) {
					$("#routes-options .scroll-container").html("");
				});
				$("#panel-title").html("Details");
				this.mapState = "none";
				this.mapDisplay.removePath();
				this.uiView = "details";
			}
			else {
				$("#routes-display").slideDown();
				$("#port-details").slideUp();
				$("#panel-title").html("Routes <span class=\"glyphicon glyphicon-remove\" style=\"padding-top:2px;float:right;\" aria-hidden=\"true\"></span>");
				this.uiView = "flights";
			}
		}
		else {
			if(spec != this.uiView) {
				this.switchView();
			}
		}
	}

	MapUI.prototype.createRouteVisualization = function(selector, data) {
		// console.log(data);
		var div = $(selector);
		d3.select(selector).selectAll("*").remove();

		var width = div.width(),
			height = div.height();

		var vis = d3.select(selector)
				.append("svg")
				.attr("width", width)
				.attr("height", height)
				.attr("id", "svg_vis");

		// console.log(data);

		portPath = data.portPath

		// console.log(circles);
		var padding = 10;
		var interval = (width-padding*2)/(portPath.length-1);

		var lines = vis.selectAll("line")
			.data(data.routes);

		for(var i = 0; i < data.routes.length; i++) {
			data.routes[i].active = false;
		}

		var normalColor = "#444444";
		var highlightColor = "#F16521";

		lines
			.enter()
			.append("line")
			.attr("x1", function(d, i) {
				return padding + i*interval;
			})
			.attr("y1", height/2)
			.attr("x2", function(d, i) {
				return padding + (i+1)*interval;
			})
			.attr("y2", height/2)
			.attr("stroke-width", 4)
			.attr("stroke", function(d, i) {
				if(d.active == true)
					return highlightColor;
				return normalColor;
			})
			.on("click", (function(_this) {
				return function(d, i) {
					_this.showRouteOptions(data.id, i);

					lines.each(function(d) {
						d.active = false;
						$(this).attr("stroke", normalColor);
					})

					if(d.active == false) {
						$(this).attr("stroke", highlightColor);
						d.active = true;
					}
				}
			})(this))
			.on("mouseover", function(d, i) {
				if(d.active == false)
					$(this).attr("stroke", highlightColor);
			})
			.on("mouseout", function(d, i) {
				if(d.active == false)
					$(this).attr("stroke", normalColor);
			})

		var circles = vis.selectAll("circle")
			.data(portPath, function(d) {
					return d.id;
				});

		var tip = d3.tip()
		  .offset([-10, 0])
		  .html(function(d) {
		  	// trafficValue *= trafficValue;
		  	// Math.sqrt(((data[i][j]/2 * 25  ) + 5) / Math.PI ) * 7
		    return "<span>" + d.name + "</span>";
			})
			.attr("class", "d3-tip");

		circles
			.enter()
			.append("circle")
			.attr("r", 6)
			.attr("fill", function(d, i) {
					if (i == portPath.length-1)
						return normalColor;
					else
						return "#FFFFFF";
				})
			.attr("stroke-width", 4)
			.attr("stroke", normalColor)
			.attr("class", "airport-circle")
			.attr("cx", function(d, i) {
				return padding + i*interval;
			})
			.attr("cy", function(d, i) {
				return height/2;
			})
			.on('mouseover', (function(_this){
				return function(d, i) {
					tip.attr("class", "d3-tip");
					tip.show(d);
					$(this).attr("fill", "#F16521");
				}
			})(this))
	    .on('mouseout', (function(_this){
				return function(d, i) {
					tip.hide(d);
					if (i == portPath.length-1)
						$(this).attr("fill", normalColor);
					else
						$(this).attr("fill", "#FFFFFF");
				}
			})(this))
			.on('click', (function(_this) {
				return function(d) {
					var id = d.id;
					_this.mapDisplay.panToMarker(id);
					var port = _this.getPortViaId(id);
					console.log(port.category_id);
				}
			})(this))

		vis.call(tip);

		return {"lines":lines, "circles":circles};
	}

	return MapUI;
})();


// map display
var MapDisplay = (function() {
	function MapDisplay(ports, mapUI) {
		this.ports = ports;
		this.mapUI = mapUI;
		this.currentPath = null;
		this.trains = [];
		var pts = [];
		//Light Rail Transit Line 1
		var colors = [];
		colors.push("#2EF503");
		colors.push("#6304A1");
		colors.push("#D10228");
		colors.push("#704927");
		pts.push(convert(14,39,26.94,121,1,16.28));
        pts.push(convert(14,39,27.42,121,1,12.93));
        pts.push(convert(14,39,27.44,121,1,12.70));
        pts.push(convert(14,39,27.45,121,1,12.46));
        pts.push(convert(14,39,27.45,121,1,12.23));
        pts.push(convert(14,39,27.45,121,1,11.94));
        pts.push(convert(14,39,27.46,121,1,11.33));
        pts.push(convert(14,39,27.42,121,1,8.32));
        pts.push(convert(14,39,27.33,121,1,3.06));
        pts.push(convert(14,39,27.23,121,0,55.60));
        pts.push(convert(14,39,27.15,121,0,50.96));
        pts.push(convert(14,39,27.09,121,0,47.12));
        pts.push(convert(14,39,27.04,121,0,42.99));
        pts.push(convert(14,39,26.94,121,0,36.85));
        pts.push(convert(14,39,26.84,121,0,30.05));
        pts.push(convert(14,39,26.83,121,0,29.71));
        pts.push(convert(14,39,26.84,121,0,29.36));
        pts.push(convert(14,39,26.78,121,0,24.45));
        pts.push(convert(14,39,26.65,121,0,18.79));
        pts.push(convert(14,39,26.68,121,0,13.23));
        pts.push(convert(14,39,26.52,121,0,8.02));
        pts.push(convert(14,39,26.43,121,0,2.79));
        pts.push(convert(14,39,26.36,120,59,57.86));
        pts.push(convert(14,39,26.28,120,59,52.14));
        pts.push(convert(14,39,26.17,120,59,44.67));
        pts.push(convert(14,39,26.06,120,59,37.62));
        pts.push(convert(14,39,25.93,120,59,28.89));
        pts.push(convert(14,39,25.82,120,59,20.79));
        pts.push(convert(14,39,25.67,120,59,10.68));
        pts.push(convert(14,39,25.59,120,59,6.97));
        pts.push(convert(14,39,25.58,120,59,6.68));
        pts.push(convert(14,39,25.57,120,59,6.48));
        pts.push(convert(14,39,25.54,120,59,6.30));
        pts.push(convert(14,39,25.51,120,59,6.06));
        pts.push(convert(14,39,25.48,120,59,5.84));
        pts.push(convert(14,39,25.45,120,59,5.67));
        pts.push(convert(14,39,25.40,120,59,5.42));
        pts.push(convert(14,39,25.32,120,59,5.17));
        pts.push(convert(14,39,25.25,120,59,4.98));
        pts.push(convert(14,39,25.17,120,59,4.74));
        pts.push(convert(14,39,25.08,120,59,4.51));
        pts.push(convert(14,39,24.98,120,59,4.30));
        pts.push(convert(14,39,24.88,120,59,4.14));
        pts.push(convert(14,39,24.77,120,59,3.94));
        pts.push(convert(14,39,24.64,120,59,3.77));
        pts.push(convert(14,39,24.49,120,59,3.56));
        pts.push(convert(14,39,24.31,120,59,3.36));
        pts.push(convert(14,39,24.14,120,59,3.20));
        pts.push(convert(14,39,23.97,120,59,3.05));
        pts.push(convert(14,39,23.80,120,59,2.93));
        pts.push(convert(14,39,23.60,120,59,2.81));
        pts.push(convert(14,39,23.39,120,59,2.70));
        pts.push(convert(14,39,23.21,120,59,2.61));
        pts.push(convert(14,39,23.01,120,59,2.53));
        pts.push(convert(14,39,22.80,120,59,2.46));
        pts.push(convert(14,39,22.58,120,59,2.40));
        pts.push(convert(14,39,22.28,120,59,2.34));
        pts.push(convert(14,39,21.98,120,59,2.30));
        pts.push(convert(14,39,21.65,120,59,2.27));
        pts.push(convert(14,39,21.26,120,59,2.26));
        pts.push(convert(14,39,17.74,120,59,2.11));
        pts.push(convert(14,39,15.60,120,59,2.06));
        pts.push(convert(14,39,10.81,120,59,1.88));
        pts.push(convert(14,39,5.18,120,59,1.67));
        pts.push(convert(14,38,58.86,120,59,1.46));
        pts.push(convert(14,38,51.39,120,59,1.22));
        pts.push(convert(14,38,42.77,120,59,0.94));
        pts.push(convert(14,38,39.54,120,59,0.85));
        pts.push(convert(14,38,35.98,120,59,0.74));
        pts.push(convert(14,38,30.02,120,59,0.54));
        pts.push(convert(14,38,23.99,120,59,0.37));
        pts.push(convert(14,38,19.96,120,59,0.20));
        pts.push(convert(14,38,19.57,120,59,0.17));
        pts.push(convert(14,38,19.18,120,59,0.12));
        pts.push(convert(14,38,18.83,120,59,0.07));
        pts.push(convert(14,38,18.43,120,59,0.00));
        pts.push(convert(14,38,17.98,120,58,59.91));
        pts.push(convert(14,38,17.47,120,58,59.78));
        pts.push(convert(14,38,16.93,120,58,59.62));
        pts.push(convert(14,38,16.40,120,58,59.44));
        pts.push(convert(14,38,15.93,120,58,59.26));
        pts.push(convert(14,38,15.40,120,58,59.03));
        pts.push(convert(14,38,14.69,120,58,58.70));
        pts.push(convert(14,38,11.37,120,58,57.21));
        pts.push(convert(14,38,9.40,120,58,56.26));
        pts.push(convert(14,38,6.27,120,58,54.74));
        pts.push(convert(14,38,2.59,120,58,52.99));
        pts.push(convert(14,37,58.84,120,58,51.25));
        pts.push(convert(14,37,58.02,120,58,50.89));
        pts.push(convert(14,37,57.74,120,58,50.79));
        pts.push(convert(14,37,57.46,120,58,50.69));
        pts.push(convert(14,37,57.19,120,58,50.62));
        pts.push(convert(14,37,56.95,120,58,50.57));
        pts.push(convert(14,37,56.73,120,58,50.53));
        pts.push(convert(14,37,56.44,120,58,50.49));
        pts.push(convert(14,37,56.19,120,58,50.46));
        pts.push(convert(14,37,55.93,120,58,50.44));
        pts.push(convert(14,37,55.61,120,58,50.44));
        pts.push(convert(14,37,55.30,120,58,50.45));
        pts.push(convert(14,37,55.02,120,58,50.46));
        pts.push(convert(14,37,54.70,120,58,50.50));
        pts.push(convert(14,37,54.33,120,58,50.56));
        pts.push(convert(14,37,54.00,120,58,50.64));
        pts.push(convert(14,37,53.71,120,58,50.72));
        pts.push(convert(14,37,53.45,120,58,50.81));
        pts.push(convert(14,37,53.17,120,58,50.92));
        pts.push(convert(14,37,52.84,120,58,51.06));
        pts.push(convert(14,37,52.58,120,58,51.19));
        pts.push(convert(14,37,52.36,120,58,51.31));
        pts.push(convert(14,37,52.14,120,58,51.45));
        pts.push(convert(14,37,51.94,120,58,51.58));
        pts.push(convert(14,37,51.69,120,58,51.74));
        pts.push(convert(14,37,50.31,120,58,53.03));
        pts.push(convert(14,37,48.83,120,58,54.34));
        pts.push(convert(14,37,46.14,120,58,56.87));
        pts.push(convert(14,37,45.44,120,58,57.49));
        pts.push(convert(14,37,45.18,120,58,57.70));
        pts.push(convert(14,37,44.99,120,58,57.84));
        pts.push(convert(14,37,44.82,120,58,57.96));
        pts.push(convert(14,37,44.64,120,58,58.08));
        pts.push(convert(14,37,44.46,120,58,58.20));
        pts.push(convert(14,37,44.27,120,58,58.30));
        pts.push(convert(14,37,44.10,120,58,58.39));
        pts.push(convert(14,37,43.90,120,58,58.48));
        pts.push(convert(14,37,43.72,120,58,58.56));
        pts.push(convert(14,37,43.52,120,58,58.64));
        pts.push(convert(14,37,43.31,120,58,58.71));
        pts.push(convert(14,37,43.11,120,58,58.79));
        pts.push(convert(14,37,42.88,120,58,58.85));
        pts.push(convert(14,37,42.63,120,58,58.92));
        pts.push(convert(14,37,42.42,120,58,58.96));
        pts.push(convert(14,37,42.13,120,58,59.01));
        pts.push(convert(14,37,41.79,120,58,59.05));
        pts.push(convert(14,37,41.49,120,58,59.06));
        pts.push(convert(14,37,38.34,120,58,59.00));
        pts.push(convert(14,37,34.51,120,58,58.87));
        pts.push(convert(14,37,30.79,120,58,58.76));
        pts.push(convert(14,37,27.03,120,58,58.64));
        pts.push(convert(14,37,23.71,120,58,58.55));
        pts.push(convert(14,37,21.39,120,58,58.49));
        pts.push(convert(14,37,17.29,120,58,58.34));
        pts.push(convert(14,37,13.52,120,58,58.24));
        pts.push(convert(14,37,9.71,120,58,58.15));
        pts.push(convert(14,37,6.00,120,58,58.09));
        pts.push(convert(14,37,2.22,120,58,57.95));
        pts.push(convert(14,36,59.89,120,58,57.90));
        pts.push(convert(14,36,56.08,120,58,57.76));
        pts.push(convert(14,36,52.39,120,58,57.66));
        pts.push(convert(14,36,48.70,120,58,57.55));
        pts.push(convert(14,36,45.47,120,58,57.38));
        pts.push(convert(14,36,41.79,120,58,57.08));
        pts.push(convert(14,36,40.47,120,58,56.99));
        pts.push(convert(14,36,36.62,120,58,56.70));
        pts.push(convert(14,36,33.13,120,58,56.42));
        pts.push(convert(14,36,29.58,120,58,56.16));
        pts.push(convert(14,36,25.90,120,58,55.87));
        pts.push(convert(14,36,22.39,120,58,55.59));
        pts.push(convert(14,36,19.16,120,58,55.34));
        pts.push(convert(14,36,16.07,120,58,55.15));
        pts.push(convert(14,36,13.59,120,58,55.01));
        pts.push(convert(14,36,12.97,120,58,54.97));
        pts.push(convert(14,36,9.35,120,58,54.82));
        pts.push(convert(14,36,8.76,120,58,54.76));
        pts.push(convert(14,36,8.31,120,58,54.71));
        pts.push(convert(14,36,5.01,120,58,54.19));
        pts.push(convert(14,36,1.43,120,58,53.61));
        pts.push(convert(14,35,58.56,120,58,53.16));
        pts.push(convert(14,35,56.25,120,58,52.74));
        pts.push(convert(14,35,54.80,120,58,52.51));
        pts.push(convert(14,35,54.61,120,58,52.46));
        pts.push(convert(14,35,54.41,120,58,52.40));
        pts.push(convert(14,35,54.09,120,58,52.28));
        pts.push(convert(14,35,53.78,120,58,52.15));
        pts.push(convert(14,35,52.27,120,58,51.48));
        pts.push(convert(14,35,52.10,120,58,51.41));
        pts.push(convert(14,35,51.86,120,58,51.32));
        pts.push(convert(14,35,51.54,120,58,51.22));
        pts.push(convert(14,35,51.18,120,58,51.12));
        pts.push(convert(14,35,50.71,120,58,51.01));
        pts.push(convert(14,35,50.34,120,58,50.97));
        pts.push(convert(14,35,46.90,120,58,50.68));
        pts.push(convert(14,35,45.64,120,58,50.60));
        pts.push(convert(14,35,45.19,120,58,50.60));
        pts.push(convert(14,35,44.92,120,58,50.62));
        pts.push(convert(14,35,44.67,120,58,50.64));
        pts.push(convert(14,35,44.37,120,58,50.68));
        pts.push(convert(14,35,44.09,120,58,50.74));
        pts.push(convert(14,35,43.83,120,58,50.80));
        pts.push(convert(14,35,43.54,120,58,50.87));
        pts.push(convert(14,35,43.22,120,58,50.98));
        pts.push(convert(14,35,39.36,120,58,52.17));
        pts.push(convert(14,35,35.76,120,58,53.27));
        pts.push(convert(14,35,33.82,120,58,53.85));
        pts.push(convert(14,35,31.09,120,58,54.66));
        pts.push(convert(14,35,30.63,120,58,54.78));
        pts.push(convert(14,35,30.18,120,58,54.86));
        pts.push(convert(14,35,29.64,120,58,54.93));
        pts.push(convert(14,35,28.98,120,58,54.98));
        pts.push(convert(14,35,25.26,120,58,55.20));
        pts.push(convert(14,35,24.96,120,58,55.23));
        pts.push(convert(14,35,21.69,120,58,55.72));
        pts.push(convert(14,35,21.13,120,58,55.79));
        pts.push(convert(14,35,20.62,120,58,55.84));
        pts.push(convert(14,35,20.20,120,58,55.88));
        pts.push(convert(14,35,19.93,120,58,55.90));
        pts.push(convert(14,35,19.68,120,58,55.92));
        pts.push(convert(14,35,19.39,120,58,55.90));
        pts.push(convert(14,35,18.83,120,58,55.85));
        pts.push(convert(14,35,17.29,120,58,55.58));
        pts.push(convert(14,35,16.30,120,58,55.37));
        pts.push(convert(14,35,15.83,120,58,55.29));
        pts.push(convert(14,35,15.48,120,58,55.26));
        pts.push(convert(14,35,15.20,120,58,55.25));
        pts.push(convert(14,35,14.93,120,58,55.26));
        pts.push(convert(14,35,14.70,120,58,55.27));
        pts.push(convert(14,35,14.49,120,58,55.29));
        pts.push(convert(14,35,14.26,120,58,55.32));
        pts.push(convert(14,35,13.98,120,58,55.37));
        pts.push(convert(14,35,13.70,120,58,55.43));
        pts.push(convert(14,35,13.42,120,58,55.50));
        pts.push(convert(14,35,13.07,120,58,55.62));
        pts.push(convert(14,35,12.70,120,58,55.76));
        pts.push(convert(14,35,12.34,120,58,55.93));
        pts.push(convert(14,35,11.81,120,58,56.25));
        pts.push(convert(14,35,10.17,120,58,57.30));
        pts.push(convert(14,35,9.13,120,58,57.91));
        pts.push(convert(14,35,5.69,120,58,59.78));
        pts.push(convert(14,35,2.28,120,59,1.70));
        pts.push(convert(14,34,59.27,120,59,3.39));
        pts.push(convert(14,34,56.53,120,59,4.99));
        pts.push(convert(14,34,53.33,120,59,6.77));
        pts.push(convert(14,34,49.89,120,59,8.69));
        pts.push(convert(14,34,46.27,120,59,10.74));
        pts.push(convert(14,34,41.84,120,59,13.27));
        pts.push(convert(14,34,38.13,120,59,15.45));
        pts.push(convert(14,34,35.60,120,59,16.96));
        pts.push(convert(14,34,31.45,120,59,19.30));
        pts.push(convert(14,34,27.95,120,59,21.32));
        pts.push(convert(14,34,24.24,120,59,23.35));
        pts.push(convert(14,34,20.50,120,59,25.46));
        pts.push(convert(14,34,17.05,120,59,27.42));
        pts.push(convert(14,34,14.71,120,59,28.74));
        pts.push(convert(14,34,13.07,120,59,29.75));
        pts.push(convert(14,34,11.19,120,59,30.57));
        pts.push(convert(14,34,7.95,120,59,32.05));
        pts.push(convert(14,34,4.64,120,59,33.55));
        pts.push(convert(14,34,1.25,120,59,35.12));
        pts.push(convert(14,33,58.16,120,59,36.59));
        pts.push(convert(14,33,55.01,120,59,38.06));
        pts.push(convert(14,33,51.91,120,59,39.51));
        pts.push(convert(14,33,48.39,120,59,41.12));
        pts.push(convert(14,33,45.25,120,59,42.60));
        pts.push(convert(14,33,44.89,120,59,42.75));
        pts.push(convert(14,33,44.55,120,59,42.85));
        pts.push(convert(14,33,44.17,120,59,42.96));
        pts.push(convert(14,33,42.79,120,59,43.30));
        pts.push(convert(14,33,41.34,120,59,43.64));
        pts.push(convert(14,33,38.00,120,59,44.40));
        pts.push(convert(14,33,34.52,120,59,45.18));
        pts.push(convert(14,33,31.05,120,59,45.99));
        pts.push(convert(14,33,27.52,120,59,46.79));
        pts.push(convert(14,33,23.76,120,59,47.66));
        pts.push(convert(14,33,20.27,120,59,48.46));
        pts.push(convert(14,33,16.83,120,59,49.24));
        pts.push(convert(14,33,15.47,120,59,49.54));
        pts.push(convert(14,33,11.37,120,59,50.50));
        pts.push(convert(14,33,7.96,120,59,51.28));
        pts.push(convert(14,33,4.50,120,59,52.08));
        pts.push(convert(14,33,0.91,120,59,52.90));
        pts.push(convert(14,32,56.22,120,59,53.97));
        pts.push(convert(14,32,53.79,120,59,54.53));
        pts.push(convert(14,32,51.66,120,59,55.01));
        pts.push(convert(14,32,48.72,120,59,55.69));
        pts.push(convert(14,32,45.51,120,59,56.45));
        pts.push(convert(14,32,42.82,120,59,57.06));
        pts.push(convert(14,32,39.33,120,59,57.86));
        pts.push(convert(14,32,37.37,120,59,58.30));
        pts.push(convert(14,32,33.94,120,59,59.09));
        pts.push(convert(14,32,30.80,120,59,59.81));
        pts.push(convert(14,32,27.49,121,0,0.57));
        pts.push(convert(14,32,24.07,121,0,1.35));
        pts.push(convert(14,32,21.49,121,0,1.95));
        pts.push(convert(14,32,19.42,121,0,2.42));
        pts.push(convert(14,32,17.66,121,0,2.69));
        pts.push(convert(14,32,17.30,121,0,2.71));
        pts.push(convert(14,32,17.01,121,0,2.71));
        pts.push(convert(14,32,16.72,121,0,2.70));
        pts.push(convert(14,32,16.42,121,0,2.67));
        pts.push(convert(14,32,16.17,121,0,2.64));
        pts.push(convert(14,32,15.94,121,0,2.61));
        pts.push(convert(14,32,15.61,121,0,2.55));
        pts.push(convert(14,32,15.28,121,0,2.48));
        pts.push(convert(14,32,14.97,121,0,2.40));
        pts.push(convert(14,32,14.65,121,0,2.30));
        pts.push(convert(14,32,14.36,121,0,2.20));
        pts.push(convert(14,32,14.08,121,0,2.09));
        pts.push(convert(14,32,13.78,121,0,1.96));
        pts.push(convert(14,32,13.40,121,0,1.78));
        pts.push(convert(14,32,13.12,121,0,1.63));
        pts.push(convert(14,32,12.90,121,0,1.51));
        pts.push(convert(14,32,12.57,121,0,1.30));
        pts.push(convert(14,32,12.15,121,0,1.02));
        pts.push(convert(14,32,11.65,121,0,0.64));
        pts.push(convert(14,32,10.11,120,59,59.43));
        pts.push(convert(14,32,8.39,120,59,58.06));
        pts.push(convert(14,32,6.57,120,59,56.65));
        pts.push(convert(14,32,4.81,120,59,55.31));
        pts.push(convert(14,32,3.24,120,59,54.03));
	    this.trains.push(createPath(pts,colors[0]));
	    //Light Rail Transit Line 2 - West Extension
	    pts.splice(0,pts.length);
	    pts.push(convert(14,36,12.84,120,57,40.82));
        pts.push(convert(14,36,9.55,120,58,3.35));
        pts.push(convert(14,36,22.54,120,58,20.41));
	    this.trains.push(createPath(pts,colors[1]));
	    //Light Rail Transit Line 2
	    pts.splice(0,pts.length);
	    pts.push(convert(14,36,12.54,120,59,0.75));
        pts.push(convert(14,36,12.21,120,59,2.82));
        pts.push(convert(14,36,12.15,120,59,3.19));
        pts.push(convert(14,36,12.09,120,59,3.46));
        pts.push(convert(14,36,12.05,120,59,3.72));
        pts.push(convert(14,36,11.99,120,59,3.95));
        pts.push(convert(14,36,11.93,120,59,4.21));
        pts.push(convert(14,36,11.87,120,59,4.42));
        pts.push(convert(14,36,11.83,120,59,4.59));
        pts.push(convert(14,36,11.78,120,59,4.80));
        pts.push(convert(14,36,11.70,120,59,5.01));
        pts.push(convert(14,36,8.90,120,59,11.05));
        pts.push(convert(14,36,6.02,120,59,17.07));
        pts.push(convert(14,36,3.77,120,59,21.67));
        pts.push(convert(14,36,1.97,120,59,25.49));
        pts.push(convert(14,36,1.89,120,59,25.73));
        pts.push(convert(14,36,1.82,120,59,25.95));
        pts.push(convert(14,36,1.77,120,59,26.14));
        pts.push(convert(14,36,1.73,120,59,26.29));
        pts.push(convert(14,36,1.68,120,59,26.46));
        pts.push(convert(14,36,1.66,120,59,26.63));
        pts.push(convert(14,36,1.62,120,59,26.81));
        pts.push(convert(14,36,1.58,120,59,27.03));
        pts.push(convert(14,36,1.57,120,59,27.24));
        pts.push(convert(14,36,1.55,120,59,27.48));
        pts.push(convert(14,36,1.54,120,59,27.70));
        pts.push(convert(14,36,1.54,120,59,27.89));
        pts.push(convert(14,36,1.56,120,59,28.13));
        pts.push(convert(14,36,1.57,120,59,28.34));
        pts.push(convert(14,36,1.59,120,59,28.53));
        pts.push(convert(14,36,1.64,120,59,28.84));
        pts.push(convert(14,36,1.71,120,59,29.17));
        pts.push(convert(14,36,1.80,120,59,29.50));
        pts.push(convert(14,36,2.95,120,59,33.11));
        pts.push(convert(14,36,3.41,120,59,34.67));
        pts.push(convert(14,36,3.80,120,59,35.94));
        pts.push(convert(14,36,4.02,120,59,36.86));
        pts.push(convert(14,36,4.06,120,59,37.14));
        pts.push(convert(14,36,4.09,120,59,37.36));
        pts.push(convert(14,36,4.10,120,59,37.58));
        pts.push(convert(14,36,4.13,120,59,37.80));
        pts.push(convert(14,36,4.11,120,59,38.00));
        pts.push(convert(14,36,4.10,120,59,38.24));
        pts.push(convert(14,36,4.07,120,59,38.52));
        pts.push(convert(14,36,4.03,120,59,38.75));
        pts.push(convert(14,36,4.01,120,59,38.98));
        pts.push(convert(14,36,3.95,120,59,39.21));
        pts.push(convert(14,36,3.88,120,59,39.46));
        pts.push(convert(14,36,3.12,120,59,41.57));
        pts.push(convert(14,36,2.08,120,59,44.42));
        pts.push(convert(14,36,2.02,120,59,44.59));
        pts.push(convert(14,36,1.97,120,59,44.86));
        pts.push(convert(14,36,1.92,120,59,45.15));
        pts.push(convert(14,36,1.89,120,59,45.39));
        pts.push(convert(14,36,1.87,120,59,45.64));
        pts.push(convert(14,36,1.84,120,59,45.85));
        pts.push(convert(14,36,1.85,120,59,46.12));
        pts.push(convert(14,36,1.86,120,59,46.41));
        pts.push(convert(14,36,1.89,120,59,46.69));
        pts.push(convert(14,36,1.92,120,59,47.02));
        pts.push(convert(14,36,1.98,120,59,47.27));
        pts.push(convert(14,36,2.02,120,59,47.48));
        pts.push(convert(14,36,2.14,120,59,47.91));
        pts.push(convert(14,36,2.72,120,59,49.74));
        pts.push(convert(14,36,2.79,120,59,50.02));
        pts.push(convert(14,36,2.82,120,59,50.25));
        pts.push(convert(14,36,2.86,120,59,50.43));
        pts.push(convert(14,36,2.88,120,59,50.58));
        pts.push(convert(14,36,2.89,120,59,50.71));
        pts.push(convert(14,36,2.91,120,59,50.94));
        pts.push(convert(14,36,2.93,120,59,51.14));
        pts.push(convert(14,36,2.94,120,59,51.35));
        pts.push(convert(14,36,2.92,120,59,51.64));
        pts.push(convert(14,36,2.91,120,59,51.84));
        pts.push(convert(14,36,2.88,120,59,52.05));
        pts.push(convert(14,36,2.85,120,59,52.30));
        pts.push(convert(14,36,2.82,120,59,52.50));
        pts.push(convert(14,36,2.71,120,59,52.87));
        pts.push(convert(14,36,2.48,120,59,53.75));
        pts.push(convert(14,36,2.38,120,59,54.06));
        pts.push(convert(14,36,2.32,120,59,54.38));
        pts.push(convert(14,36,2.25,120,59,54.70));
        pts.push(convert(14,36,2.20,120,59,54.93));
        pts.push(convert(14,36,2.16,120,59,55.24));
        pts.push(convert(14,36,2.13,120,59,55.47));
        pts.push(convert(14,36,2.12,120,59,55.71));
        pts.push(convert(14,36,2.12,120,59,55.95));
        pts.push(convert(14,36,2.10,120,59,56.16));
        pts.push(convert(14,36,2.13,120,59,56.42));
        pts.push(convert(14,36,2.17,120,59,56.69));
        pts.push(convert(14,36,2.22,120,59,56.95));
        pts.push(convert(14,36,2.26,120,59,57.28));
        pts.push(convert(14,36,2.35,120,59,57.62));
        pts.push(convert(14,36,2.46,120,59,57.98));
        pts.push(convert(14,36,3.27,121,0,0.01));
        pts.push(convert(14,36,3.37,121,0,0.28));
        pts.push(convert(14,36,3.46,121,0,0.55));
        pts.push(convert(14,36,3.55,121,0,0.84));
        pts.push(convert(14,36,3.65,121,0,1.27));
        pts.push(convert(14,36,3.73,121,0,1.76));
        pts.push(convert(14,36,4.12,121,0,4.87));
        pts.push(convert(14,36,4.48,121,0,7.44));
        pts.push(convert(14,36,4.90,121,0,9.65));
        pts.push(convert(14,36,5.11,121,0,10.86));
        pts.push(convert(14,36,5.24,121,0,11.63));
        pts.push(convert(14,36,5.57,121,0,14.45));
        pts.push(convert(14,36,5.99,121,0,18.54));
        pts.push(convert(14,36,6.26,121,0,21.38));
        pts.push(convert(14,36,6.64,121,0,25.61));
        pts.push(convert(14,36,7.23,121,0,31.88));
        pts.push(convert(14,36,7.72,121,0,37.12));
        pts.push(convert(14,36,8.01,121,0,40.45));
        pts.push(convert(14,36,8.32,121,0,44.15));
        pts.push(convert(14,36,8.72,121,0,48.90));
        pts.push(convert(14,36,9.07,121,0,53.02));
        pts.push(convert(14,36,9.10,121,0,53.31));
        pts.push(convert(14,36,9.15,121,0,53.66));
        pts.push(convert(14,36,9.22,121,0,54.05));
        pts.push(convert(14,36,9.29,121,0,54.43));
        pts.push(convert(14,36,9.38,121,0,54.80));
        pts.push(convert(14,36,9.52,121,0,55.17));
        pts.push(convert(14,36,9.63,121,0,55.53));
        pts.push(convert(14,36,9.71,121,0,55.77));
        pts.push(convert(14,36,9.78,121,0,55.96));
        pts.push(convert(14,36,9.88,121,0,56.18));
        pts.push(convert(14,36,10.01,121,0,56.41));
        pts.push(convert(14,36,10.12,121,0,56.61));
        pts.push(convert(14,36,10.26,121,0,56.85));
        pts.push(convert(14,36,10.38,121,0,57.05));
        pts.push(convert(14,36,10.50,121,0,57.24));
        pts.push(convert(14,36,10.63,121,0,57.43));
        pts.push(convert(14,36,10.75,121,0,57.61));
        pts.push(convert(14,36,10.86,121,0,57.76));
        pts.push(convert(14,36,11.05,121,0,57.98));
        pts.push(convert(14,36,12.84,121,0,59.87));
        pts.push(convert(14,36,14.74,121,1,1.81));
        pts.push(convert(14,36,18.68,121,1,5.86));
        pts.push(convert(14,36,22.83,121,1,10.07));
        pts.push(convert(14,36,26.21,121,1,13.57));
        pts.push(convert(14,36,30.58,121,1,17.93));
        pts.push(convert(14,36,32.30,121,1,19.70));
        pts.push(convert(14,36,32.52,121,1,19.93));
        pts.push(convert(14,36,32.81,121,1,20.27));
        pts.push(convert(14,36,33.01,121,1,20.56));
        pts.push(convert(14,36,33.19,121,1,20.80));
        pts.push(convert(14,36,33.35,121,1,21.06));
        pts.push(convert(14,36,33.55,121,1,21.37));
        pts.push(convert(14,36,33.76,121,1,21.79));
        pts.push(convert(14,36,33.93,121,1,22.19));
        pts.push(convert(14,36,34.09,121,1,22.64));
        pts.push(convert(14,36,35.92,121,1,28.09));
        pts.push(convert(14,36,38.01,121,1,34.34));
        pts.push(convert(14,36,39.61,121,1,39.32));
        pts.push(convert(14,36,41.45,121,1,44.85));
        pts.push(convert(14,36,42.25,121,1,47.39));
        pts.push(convert(14,36,43.01,121,1,49.72));
        pts.push(convert(14,36,43.89,121,1,52.43));
        pts.push(convert(14,36,44.22,121,1,53.39));
        pts.push(convert(14,36,44.92,121,1,55.53));
        pts.push(convert(14,36,45.45,121,1,57.11));
        pts.push(convert(14,36,45.69,121,1,57.83));
        pts.push(convert(14,36,46.02,121,1,58.59));
        pts.push(convert(14,36,46.26,121,1,59.15));
        pts.push(convert(14,36,46.50,121,1,59.61));
        pts.push(convert(14,36,46.66,121,1,59.98));
        pts.push(convert(14,36,48.62,121,2,3.34));
        pts.push(convert(14,36,50.30,121,2,6.22));
        pts.push(convert(14,36,52.24,121,2,9.52));
        pts.push(convert(14,36,54.32,121,2,13.09));
        pts.push(convert(14,36,57.84,121,2,18.98));
        pts.push(convert(14,37,0.94,121,2,24.17));
        pts.push(convert(14,37,4.16,121,2,29.56));
        pts.push(convert(14,37,6.60,121,2,33.68));
        pts.push(convert(14,37,7.88,121,2,35.90));
        pts.push(convert(14,37,9.12,121,2,37.98));
        pts.push(convert(14,37,9.37,121,2,38.47));
        pts.push(convert(14,37,9.67,121,2,39.12));
        pts.push(convert(14,37,9.97,121,2,39.82));
        pts.push(convert(14,37,10.18,121,2,40.36));
        pts.push(convert(14,37,10.26,121,2,40.59));
        pts.push(convert(14,37,10.39,121,2,40.94));
        pts.push(convert(14,37,10.99,121,2,42.90));
        pts.push(convert(14,37,13.00,121,2,48.95));
        pts.push(convert(14,37,14.91,121,2,54.54));
        pts.push(convert(14,37,15.19,121,2,55.28));
        pts.push(convert(14,37,16.29,121,2,57.90));
        pts.push(convert(14,37,18.33,121,3,2.62));
        pts.push(convert(14,37,19.93,121,3,6.33));
        pts.push(convert(14,37,22.05,121,3,10.79));
        pts.push(convert(14,37,23.68,121,3,14.37));
        pts.push(convert(14,37,26.58,121,3,20.10));
        pts.push(convert(14,37,30.43,121,3,27.88));
        pts.push(convert(14,37,33.02,121,3,33.12));
        pts.push(convert(14,37,35.50,121,3,38.16));
        pts.push(convert(14,37,36.94,121,3,41.07));
        pts.push(convert(14,37,38.44,121,3,44.15));
        pts.push(convert(14,37,38.64,121,3,44.56));
        pts.push(convert(14,37,38.77,121,3,44.83));
        pts.push(convert(14,37,38.94,121,3,45.25));
        pts.push(convert(14,37,39.11,121,3,45.71));
        pts.push(convert(14,37,39.27,121,3,46.24));
        pts.push(convert(14,37,39.45,121,3,46.82));
        pts.push(convert(14,37,39.64,121,3,47.49));
        pts.push(convert(14,37,39.79,121,3,48.27));
        pts.push(convert(14,37,40.62,121,3,53.02));
        pts.push(convert(14,37,41.55,121,3,58.62));
        pts.push(convert(14,37,41.96,121,4,1.01));
        pts.push(convert(14,37,42.08,121,4,1.61));
        pts.push(convert(14,37,42.17,121,4,2.08));
        pts.push(convert(14,37,42.30,121,4,2.50));
        pts.push(convert(14,37,42.44,121,4,2.80));
        pts.push(convert(14,37,45.42,121,4,9.42));
        pts.push(convert(14,37,46.05,121,4,10.71));
        pts.push(convert(14,37,48.38,121,4,15.61));
        pts.push(convert(14,37,50.07,121,4,19.32));
        pts.push(convert(14,37,51.74,121,4,22.87));
        pts.push(convert(14,37,52.96,121,4,25.48));
        pts.push(convert(14,37,54.52,121,4,28.97));
        pts.push(convert(14,37,55.29,121,4,31.71));
        pts.push(convert(14,37,55.70,121,4,33.78));
        pts.push(convert(14,37,55.91,121,4,35.51));
        pts.push(convert(14,37,55.83,121,4,36.55));
        pts.push(convert(14,37,55.64,121,4,37.08));
        pts.push(convert(14,37,55.38,121,4,37.60));
        pts.push(convert(14,37,55.06,121,4,38.26));
        pts.push(convert(14,37,54.61,121,4,38.84));
        pts.push(convert(14,37,54.23,121,4,39.60));
        pts.push(convert(14,37,53.72,121,4,40.37));
        pts.push(convert(14,37,53.13,121,4,41.14));
        pts.push(convert(14,37,52.42,121,4,41.81));
        pts.push(convert(14,37,51.53,121,4,42.45));
        pts.push(convert(14,37,51.08,121,4,42.74));
        pts.push(convert(14,37,48.27,121,4,44.68));
        pts.push(convert(14,37,42.07,121,4,48.93));
        pts.push(convert(14,37,38.75,121,4,51.20));
        pts.push(convert(14,37,37.38,121,4,52.18));
        pts.push(convert(14,37,36.39,121,4,52.92));
        pts.push(convert(14,37,35.11,121,4,53.94));
        pts.push(convert(14,37,31.44,121,4,57.03));
        pts.push(convert(14,37,30.26,121,4,58.02));
        pts.push(convert(14,37,29.31,121,4,58.93));
        pts.push(convert(14,37,28.16,121,5,0.00));
        pts.push(convert(14,37,26.46,121,5,1.77));
        pts.push(convert(14,37,25.03,121,5,3.30));
        pts.push(convert(14,37,23.95,121,5,4.47));
        pts.push(convert(14,37,23.07,121,5,5.54));
        pts.push(convert(14,37,21.45,121,5,7.40));
        pts.push(convert(14,37,19.34,121,5,9.74));
        pts.push(convert(14,37,16.03,121,5,13.12));
        pts.push(convert(14,37,12.62,121,5,17.20));
        pts.push(convert(14,37,9.57,121,5,21.22));
        pts.push(convert(14,37,9.03,121,5,22.01));
        pts.push(convert(14,37,8.67,121,5,22.54));
        pts.push(convert(14,37,8.42,121,5,22.99));
        pts.push(convert(14,37,8.20,121,5,23.44));
        pts.push(convert(14,37,7.95,121,5,23.94));
        pts.push(convert(14,37,7.75,121,5,24.40));
        pts.push(convert(14,37,7.60,121,5,24.84));
        pts.push(convert(14,37,7.47,121,5,25.25));
        pts.push(convert(14,37,7.34,121,5,25.68));
        pts.push(convert(14,37,7.21,121,5,26.14));
        pts.push(convert(14,37,7.10,121,5,26.69));
        pts.push(convert(14,37,7.01,121,5,27.15));
        pts.push(convert(14,37,6.97,121,5,27.59));
        pts.push(convert(14,37,6.91,121,5,28.05));
        pts.push(convert(14,37,6.87,121,5,28.39));
        pts.push(convert(14,37,6.82,121,5,28.73));
        pts.push(convert(14,37,6.82,121,5,29.09));
        pts.push(convert(14,37,6.83,121,5,29.46));
        pts.push(convert(14,37,6.87,121,5,29.96));
        pts.push(convert(14,37,6.98,121,5,30.50));
        pts.push(convert(14,37,7.03,121,5,31.02));
        pts.push(convert(14,37,7.20,121,5,32.10));
        pts.push(convert(14,37,8.82,121,5,40.09));
        pts.push(convert(14,37,12.13,121,5,55.73));
	    this.trains.push(createPath(pts,colors[1]));
	    //Light Rail Transit Line 2 (East Extension)
	    pts.splice(0,pts.length);
	    pts.push(convert(14,37,13.41,121,6,2.67));
        pts.push(convert(14,37,15.53,121,6,11.91));
        pts.push(convert(14,37,19.70,121,6,31.26));
        pts.push(convert(14,37,22.36,121,6,44.41));
        pts.push(convert(14,37,25.66,121,6,60.00));
        pts.push(convert(14,37,28.85,121,7,14.87));
	    this.trains.push(createPath(pts,colors[1]));
	    //Metro Rail Transit Line 3
	    pts.splice(0,pts.length);
	    pts.push(convert(14,39,7.78,121,1,56.44));
        pts.push(convert(14,38,58.62,121,2,2.32));
        pts.push(convert(14,38,48.44,121,2,8.80));
        pts.push(convert(14,38,33.51,121,2,18.51));
        pts.push(convert(14,38,23.83,121,2,24.87));
        pts.push(convert(14,38,14.77,121,2,30.78));
        pts.push(convert(14,38,6.79,121,2,35.93));
        pts.push(convert(14,37,58.38,121,2,41.46));
        pts.push(convert(14,37,57.87,121,2,41.82));
        pts.push(convert(14,37,57.42,121,2,42.05));
        pts.push(convert(14,37,50.88,121,2,45.12));
        pts.push(convert(14,37,44.25,121,2,48.18));
        pts.push(convert(14,37,35.79,121,2,52.04));
        pts.push(convert(14,37,27.46,121,2,55.87));
        pts.push(convert(14,37,17.86,121,3,0.32));
        pts.push(convert(14,37,9.35,121,3,4.31));
        pts.push(convert(14,37,2.74,121,3,7.12));
        pts.push(convert(14,36,55.61,121,3,10.42));
        pts.push(convert(14,36,47.87,121,3,14.00));
        pts.push(convert(14,36,38.49,121,3,18.34));
        pts.push(convert(14,36,28.20,121,3,23.02));
        pts.push(convert(14,36,22.57,121,3,25.72));
        pts.push(convert(14,36,17.42,121,3,28.09));
        pts.push(convert(14,36,9.36,121,3,31.79));
        pts.push(convert(14,36,8.32,121,3,32.24));
        pts.push(convert(14,36,7.75,121,3,32.51));
        pts.push(convert(14,36,7.27,121,3,32.73));
        pts.push(convert(14,36,6.82,121,3,32.92));
        pts.push(convert(14,36,6.24,121,3,33.13));
        pts.push(convert(14,36,5.74,121,3,33.30));
        pts.push(convert(14,36,5.26,121,3,33.46));
        pts.push(convert(14,36,4.80,121,3,33.63));
        pts.push(convert(14,36,4.30,121,3,33.79));
        pts.push(convert(14,36,3.85,121,3,33.92));
        pts.push(convert(14,36,3.29,121,3,34.10));
        pts.push(convert(14,36,2.72,121,3,34.20));
        pts.push(convert(14,36,2.18,121,3,34.33));
        pts.push(convert(14,36,1.74,121,3,34.43));
        pts.push(convert(14,36,1.32,121,3,34.51));
        pts.push(convert(14,36,0.75,121,3,34.63));
        pts.push(convert(14,36,0.27,121,3,34.70));
        pts.push(convert(14,35,59.83,121,3,34.78));
        pts.push(convert(14,35,59.33,121,3,34.86));
        pts.push(convert(14,35,58.83,121,3,34.90));
        pts.push(convert(14,35,58.30,121,3,34.97));
        pts.push(convert(14,35,57.70,121,3,35.02));
        pts.push(convert(14,35,57.21,121,3,35.05));
        pts.push(convert(14,35,56.72,121,3,35.08));
        pts.push(convert(14,35,56.29,121,3,35.11));
        pts.push(convert(14,35,55.60,121,3,35.12));
        pts.push(convert(14,35,55.10,121,3,35.13));
        pts.push(convert(14,35,54.56,121,3,35.15));
        pts.push(convert(14,35,54.08,121,3,35.13));
        pts.push(convert(14,35,53.59,121,3,35.12));
        pts.push(convert(14,35,53.16,121,3,35.12));
        pts.push(convert(14,35,52.66,121,3,35.07));
        pts.push(convert(14,35,52.18,121,3,35.05));
        pts.push(convert(14,35,50.53,121,3,34.89));
        pts.push(convert(14,35,50.22,121,3,34.81));
        pts.push(convert(14,35,48.18,121,3,34.47));
        pts.push(convert(14,35,47.63,121,3,34.31));
        pts.push(convert(14,35,47.06,121,3,34.14));
        pts.push(convert(14,35,46.64,121,3,33.98));
        pts.push(convert(14,35,46.25,121,3,33.86));
        pts.push(convert(14,35,44.42,121,3,32.94));
        pts.push(convert(14,35,44.08,121,3,32.80));
        pts.push(convert(14,35,43.69,121,3,32.60));
        pts.push(convert(14,35,43.32,121,3,32.43));
        pts.push(convert(14,35,42.85,121,3,32.21));
        pts.push(convert(14,35,38.80,121,3,30.84));
        pts.push(convert(14,35,33.87,121,3,29.25));
        pts.push(convert(14,35,28.04,121,3,27.39));
        pts.push(convert(14,35,27.33,121,3,27.21));
        pts.push(convert(14,35,26.72,121,3,27.04));
        pts.push(convert(14,35,26.14,121,3,26.92));
        pts.push(convert(14,35,21.98,121,3,26.03));
        pts.push(convert(14,35,21.57,121,3,25.94));
        pts.push(convert(14,35,21.15,121,3,25.83));
        pts.push(convert(14,35,19.66,121,3,25.36));
        pts.push(convert(14,35,16.28,121,3,24.19));
        pts.push(convert(14,35,12.41,121,3,22.93));
        pts.push(convert(14,35,4.07,121,3,20.16));
        pts.push(convert(14,35,3.55,121,3,19.92));
        pts.push(convert(14,35,2.99,121,3,19.68));
        pts.push(convert(14,35,2.53,121,3,19.49));
        pts.push(convert(14,35,2.04,121,3,19.25));
        pts.push(convert(14,35,1.42,121,3,18.94));
        pts.push(convert(14,35,0.88,121,3,18.63));
        pts.push(convert(14,34,56.70,121,3,16.11));
        pts.push(convert(14,34,52.29,121,3,13.22));
        pts.push(convert(14,34,48.75,121,3,10.78));
        pts.push(convert(14,34,41.34,121,3,5.38));
        pts.push(convert(14,34,40.59,121,3,4.79));
        pts.push(convert(14,34,39.39,121,3,3.88));
        pts.push(convert(14,34,38.21,121,3,2.95));
        pts.push(convert(14,34,36.17,121,3,1.40));
        pts.push(convert(14,34,34.76,121,3,0.36));
        pts.push(convert(14,34,33.50,121,2,59.40));
        pts.push(convert(14,34,30.23,121,2,56.99));
        pts.push(convert(14,34,27.72,121,2,55.07));
        pts.push(convert(14,34,25.38,121,2,53.37));
        pts.push(convert(14,34,23.58,121,2,52.14));
        pts.push(convert(14,34,22.74,121,2,51.56));
        pts.push(convert(14,34,22.34,121,2,51.30));
        pts.push(convert(14,34,22.04,121,2,51.07));
        pts.push(convert(14,34,21.54,121,2,50.82));
        pts.push(convert(14,34,21.13,121,2,50.53));
        pts.push(convert(14,34,20.67,121,2,50.37));
        pts.push(convert(14,34,20.38,121,2,50.19));
        pts.push(convert(14,34,20.04,121,2,50.02));
        pts.push(convert(14,34,19.64,121,2,49.83));
        pts.push(convert(14,34,19.32,121,2,49.67));
        pts.push(convert(14,34,18.86,121,2,49.44));
        pts.push(convert(14,34,18.43,121,2,49.22));
        pts.push(convert(14,34,17.97,121,2,49.03));
        pts.push(convert(14,34,17.52,121,2,48.84));
        pts.push(convert(14,34,17.01,121,2,48.66));
        pts.push(convert(14,34,16.53,121,2,48.48));
        pts.push(convert(14,34,15.94,121,2,48.32));
        pts.push(convert(14,34,15.47,121,2,48.14));
        pts.push(convert(14,34,14.92,121,2,47.97));
        pts.push(convert(14,34,14.50,121,2,47.82));
        pts.push(convert(14,34,13.62,121,2,47.61));
        pts.push(convert(14,34,12.73,121,2,47.36));
        pts.push(convert(14,34,8.76,121,2,46.24));
        pts.push(convert(14,34,7.46,121,2,45.89));
        pts.push(convert(14,34,5.91,121,2,45.43));
        pts.push(convert(14,34,3.68,121,2,44.80));
        pts.push(convert(14,34,0.64,121,2,43.84));
        pts.push(convert(14,33,57.82,121,2,43.14));
        pts.push(convert(14,33,54.11,121,2,42.10));
        pts.push(convert(14,33,53.15,121,2,41.71));
        pts.push(convert(14,33,52.48,121,2,41.45));
        pts.push(convert(14,33,51.92,121,2,41.24));
        pts.push(convert(14,33,51.33,121,2,40.99));
        pts.push(convert(14,33,50.77,121,2,40.75));
        pts.push(convert(14,33,50.18,121,2,40.45));
        pts.push(convert(14,33,49.53,121,2,40.12));
        pts.push(convert(14,33,49.14,121,2,39.88));
        pts.push(convert(14,33,48.53,121,2,39.57));
        pts.push(convert(14,33,47.97,121,2,39.23));
        pts.push(convert(14,33,46.88,121,2,38.52));
        pts.push(convert(14,33,46.46,121,2,38.26));
        pts.push(convert(14,33,46.14,121,2,38.05));
        pts.push(convert(14,33,45.81,121,2,37.79));
        pts.push(convert(14,33,45.33,121,2,37.42));
        pts.push(convert(14,33,45.03,121,2,37.18));
        pts.push(convert(14,33,44.68,121,2,36.91));
        pts.push(convert(14,33,44.18,121,2,36.48));
        pts.push(convert(14,33,43.77,121,2,36.11));
        pts.push(convert(14,33,43.47,121,2,35.87));
        pts.push(convert(14,33,43.26,121,2,35.66));
        pts.push(convert(14,33,42.72,121,2,35.18));
        pts.push(convert(14,33,42.25,121,2,34.74));
        pts.push(convert(14,33,41.69,121,2,34.18));
        pts.push(convert(14,33,40.94,121,2,33.39));
        pts.push(convert(14,33,40.40,121,2,32.76));
        pts.push(convert(14,33,39.09,121,2,31.21));
        pts.push(convert(14,33,38.59,121,2,30.64));
        pts.push(convert(14,33,34.50,121,2,25.78));
        pts.push(convert(14,33,30.58,121,2,21.09));
        pts.push(convert(14,33,27.27,121,2,17.16));
        pts.push(convert(14,33,24.38,121,2,13.62));
        pts.push(convert(14,33,22.20,121,2,11.11));
        pts.push(convert(14,33,19.11,121,2,7.33));
        pts.push(convert(14,33,16.83,121,2,4.75));
        pts.push(convert(14,33,13.92,121,2,1.38));
        pts.push(convert(14,33,9.94,121,1,56.60));
        pts.push(convert(14,33,4.69,121,1,50.30));
        pts.push(convert(14,32,59.34,121,1,43.97));
        pts.push(convert(14,32,57.33,121,1,40.66));
        pts.push(convert(14,32,52.67,121,1,36.00));
        pts.push(convert(14,32,46.56,121,1,28.80));
        pts.push(convert(14,32,40.47,121,1,21.62));
        pts.push(convert(14,32,34.93,121,1,15.10));
        pts.push(convert(14,32,34.48,121,1,14.53));
        pts.push(convert(14,32,34.05,121,1,13.97));
        pts.push(convert(14,32,33.36,121,1,13.17));
        pts.push(convert(14,32,32.88,121,1,12.51));
        pts.push(convert(14,32,32.16,121,1,11.48));
        pts.push(convert(14,32,30.85,121,1,9.54));
        pts.push(convert(14,32,28.86,121,1,6.83));
        pts.push(convert(14,32,28.18,121,1,5.80));
        pts.push(convert(14,32,27.39,121,1,4.50));
        pts.push(convert(14,32,26.94,121,1,3.67));
        pts.push(convert(14,32,26.24,121,1,2.44));
        pts.push(convert(14,32,25.03,121,1,0.03));
        pts.push(convert(14,32,24.35,121,0,58.39));
        pts.push(convert(14,32,23.66,121,0,56.68));
        pts.push(convert(14,32,23.05,121,0,55.06));
        pts.push(convert(14,32,22.51,121,0,53.62));
        pts.push(convert(14,32,22.35,121,0,53.09));
        pts.push(convert(14,32,22.18,121,0,52.56));
        pts.push(convert(14,32,21.88,121,0,51.60));
        pts.push(convert(14,32,21.59,121,0,50.64));
        pts.push(convert(14,32,21.27,121,0,49.48));
        pts.push(convert(14,32,20.97,121,0,48.32));
        pts.push(convert(14,32,20.36,121,0,45.33));
        pts.push(convert(14,32,19.28,121,0,38.34));
        pts.push(convert(14,32,18.18,121,0,29.90));
        pts.push(convert(14,32,17.27,121,0,22.64));
        pts.push(convert(14,32,16.15,121,0,13.25));
        pts.push(convert(14,32,15.32,121,0,6.28));
	    this.trains.push(createPath(pts,colors[2]));
	    pts.splice(0,pts.length);
	    //PNR NORTHBOUND
	    pts.push(convert(14,37,19.36,120,58,29.73));
		pts.push(convert(14,37,24.83,120,58,30.49));
		pts.push(convert(14,37,30.83,120,58,31.30));
		pts.push(convert(14,37,35.37,120,58,31.88));
		pts.push(convert(14,37,37.11,120,58,32.09));
		pts.push(convert(14,37,41.54,120,58,32.71));
		pts.push(convert(14,37,47.04,120,58,33.47));
		pts.push(convert(14,37,53.13,120,58,34.31));
		pts.push(convert(14,37,56.94,120,58,34.87));
		pts.push(convert(14,38,2.31,120,58,35.62));
		pts.push(convert(14,38,5.57,120,58,36.07));
		pts.push(convert(14,38,10.62,120,58,36.77));
		pts.push(convert(14,38,16.71,120,58,37.54));
		pts.push(convert(14,38,18.15,120,58,37.76));
		pts.push(convert(14,38,19.54,120,58,37.88));
		pts.push(convert(14,38,21.17,120,58,37.94));
		pts.push(convert(14,38,22.14,120,58,37.93));
		pts.push(convert(14,38,22.93,120,58,37.91));
		pts.push(convert(14,38,23.98,120,58,37.85));
		pts.push(convert(14,38,25.62,120,58,37.69));
		pts.push(convert(14,38,26.89,120,58,37.50));
		pts.push(convert(14,38,30.30,120,58,36.82));
		pts.push(convert(14,38,34.54,120,58,35.97));
		pts.push(convert(14,38,37.05,120,58,35.48));
		pts.push(convert(14,38,38.22,120,58,35.24));
		pts.push(convert(14,38,39.27,120,58,35.04));
		pts.push(convert(14,38,41.14,120,58,34.66));
		pts.push(convert(14,38,43.10,120,58,34.24));
		pts.push(convert(14,38,44.17,120,58,34.03));
		pts.push(convert(14,38,47.21,120,58,33.42));
		pts.push(convert(14,38,51.22,120,58,32.61));
		pts.push(convert(14,38,55.43,120,58,31.78));
		pts.push(convert(14,38,59.12,120,58,31.04));
		pts.push(convert(14,39,0.90,120,58,30.68));
		pts.push(convert(14,39,5.01,120,58,29.74));
		pts.push(convert(14,39,7.20,120,58,29.36));
		pts.push(convert(14,39,10.57,120,58,28.65));
		pts.push(convert(14,39,14.46,120,58,27.92));
		pts.push(convert(14,39,18.72,120,58,27.04));
		pts.push(convert(14,39,22.44,120,58,26.37));
		pts.push(convert(14,39,23.78,120,58,26.09));
		pts.push(convert(14,39,24.80,120,58,25.89));
		pts.push(convert(14,39,25.90,120,58,25.78));
		pts.push(convert(14,39,27.43,120,58,25.69));
		pts.push(convert(14,39,31.69,120,58,25.29));
		pts.push(convert(14,39,35.99,120,58,24.92));
		pts.push(convert(14,39,39.69,120,58,24.67));
		pts.push(convert(14,39,43.61,120,58,24.31));
		pts.push(convert(14,39,47.26,120,58,24.08));
		pts.push(convert(14,39,51.37,120,58,23.72));
		pts.push(convert(14,39,55.34,120,58,23.44));
		pts.push(convert(14,39,59.82,120,58,23.04));
		pts.push(convert(14,40,6.86,120,58,22.56));
		pts.push(convert(14,40,26.74,120,58,21.12));
		pts.push(convert(14,40,39.72,120,58,20.08));
		pts.push(convert(14,40,45.31,120,58,19.28));
		pts.push(convert(14,40,47.99,120,58,18.69));
		pts.push(convert(14,40,49.31,120,58,18.26));
		pts.push(convert(14,40,50.48,120,58,17.74));
		pts.push(convert(14,40,52.00,120,58,17.04));
		pts.push(convert(14,41,1.72,120,58,11.59));
		pts.push(convert(14,41,11.06,120,58,6.27));
		pts.push(convert(14,41,20.93,120,58,0.68));
		pts.push(convert(14,41,26.47,120,57,57.66));
		pts.push(convert(14,41,27.62,120,57,57.12));
		pts.push(convert(14,41,28.53,120,57,56.68));
		pts.push(convert(14,41,29.61,120,57,56.22));
		pts.push(convert(14,41,30.76,120,57,55.77));
		pts.push(convert(14,41,32.19,120,57,55.33));
		pts.push(convert(14,41,33.85,120,57,54.85));
	    this.trains.push(createPath(pts,colors[3]));
	    pts.splice(0,pts.length);
	    //PNR SOUTBOUND
	    pts.push(convert(14,36,40.80,120,58,23.19));
		pts.push(convert(14,36,46.48,120,58,24.46));
		pts.push(convert(14,36,53.29,120,58,25.99));
		pts.push(convert(14,37,0.16,120,58,27.12));
		pts.push(convert(14,37,7.38,120,58,28.10));
		pts.push(convert(14,37,12.37,120,58,28.80));
		pts.push(convert(14,37,15.34,120,58,29.18));
		pts.push(convert(14,37,15.78,120,58,29.29));
		pts.push(convert(14,37,16.10,120,58,29.40));
		pts.push(convert(14,37,16.41,120,58,29.50));
		pts.push(convert(14,37,16.77,120,58,29.63));
		pts.push(convert(14,37,17.22,120,58,29.82));
		pts.push(convert(14,37,17.66,120,58,30.01));
		pts.push(convert(14,37,18.09,120,58,30.24));
		pts.push(convert(14,37,18.46,120,58,30.44));
		pts.push(convert(14,37,18.94,120,58,30.75));
		pts.push(convert(14,37,19.37,120,58,31.05));
		pts.push(convert(14,37,19.81,120,58,31.39));
		pts.push(convert(14,37,20.26,120,58,31.78));
		pts.push(convert(14,37,20.70,120,58,32.22));
		pts.push(convert(14,37,21.09,120,58,32.65));
		pts.push(convert(14,37,21.52,120,58,33.20));
		pts.push(convert(14,37,21.96,120,58,33.89));
		pts.push(convert(14,37,22.39,120,58,34.66));
		pts.push(convert(14,37,22.66,120,58,35.27));
		pts.push(convert(14,37,22.90,120,58,35.94));
		pts.push(convert(14,37,23.10,120,58,36.58));
		pts.push(convert(14,37,23.26,120,58,37.29));
		pts.push(convert(14,37,23.39,120,58,38.27));
		pts.push(convert(14,37,23.43,120,58,38.99));
		pts.push(convert(14,37,23.40,120,58,39.82));
		pts.push(convert(14,37,23.30,120,58,40.99));
		pts.push(convert(14,37,22.77,120,58,46.47));
		pts.push(convert(14,37,22.33,120,58,51.03));
		pts.push(convert(14,37,21.96,120,58,54.98));
		pts.push(convert(14,37,21.68,120,58,57.77));
		pts.push(convert(14,37,21.43,120,59,0.47));
		pts.push(convert(14,37,21.00,120,59,4.78));
		pts.push(convert(14,37,20.54,120,59,9.59));
		pts.push(convert(14,37,20.40,120,59,10.97));
		pts.push(convert(14,37,20.35,120,59,11.32));
		pts.push(convert(14,37,20.27,120,59,11.67));
		pts.push(convert(14,37,20.13,120,59,12.16));
		pts.push(convert(14,37,20.01,120,59,12.51));
		pts.push(convert(14,37,19.85,120,59,12.98));
		pts.push(convert(14,37,19.65,120,59,13.49));
		pts.push(convert(14,37,19.42,120,59,13.98));
		pts.push(convert(14,37,19.18,120,59,14.42));
		pts.push(convert(14,37,18.99,120,59,14.74));
		pts.push(convert(14,37,18.77,120,59,15.08));
		pts.push(convert(14,37,18.58,120,59,15.36));
		pts.push(convert(14,37,18.33,120,59,15.68));
		pts.push(convert(14,37,18.10,120,59,15.96));
		pts.push(convert(14,37,17.81,120,59,16.27));
		pts.push(convert(14,37,17.46,120,59,16.63));
		pts.push(convert(14,37,16.95,120,59,17.13));
		pts.push(convert(14,37,14.45,120,59,19.53));
		pts.push(convert(14,37,11.96,120,59,21.91));
		pts.push(convert(14,37,9.52,120,59,24.23));
		pts.push(convert(14,37,6.78,120,59,26.87));
		pts.push(convert(14,37,3.80,120,59,29.73));
		pts.push(convert(14,37,1.24,120,59,32.17));
		pts.push(convert(14,37,0.07,120,59,33.30));
		pts.push(convert(14,36,57.83,120,59,35.45));
		pts.push(convert(14,36,55.44,120,59,37.74));
		pts.push(convert(14,36,52.54,120,59,40.52));
		pts.push(convert(14,36,50.28,120,59,42.67));
		pts.push(convert(14,36,47.08,120,59,45.74));
		pts.push(convert(14,36,45.09,120,59,47.65));
		pts.push(convert(14,36,43.97,120,59,48.73));
		pts.push(convert(14,36,41.35,120,59,51.24));
		pts.push(convert(14,36,39.07,120,59,53.42));
		pts.push(convert(14,36,36.73,120,59,55.66));
		pts.push(convert(14,36,34.22,120,59,58.06));
		pts.push(convert(14,36,31.75,121,0,0.42));
		pts.push(convert(14,36,29.09,121,0,2.97));
		pts.push(convert(14,36,26.34,121,0,5.60));
		pts.push(convert(14,36,23.39,121,0,8.43));
		pts.push(convert(14,36,21.16,121,0,10.55));
		pts.push(convert(14,36,19.01,121,0,12.61));
		pts.push(convert(14,36,16.54,121,0,14.97));
		pts.push(convert(14,36,15.52,121,0,15.97));
		pts.push(convert(14,36,14.75,121,0,16.82));
		pts.push(convert(14,36,14.07,121,0,17.67));
		pts.push(convert(14,36,13.28,121,0,18.83));
		pts.push(convert(14,36,12.79,121,0,19.69));
		pts.push(convert(14,36,12.07,121,0,21.16));
		pts.push(convert(14,36,11.47,121,0,22.85));
		pts.push(convert(14,36,10.39,121,0,26.45));
		pts.push(convert(14,36,10.19,121,0,27.07));
		pts.push(convert(14,36,9.98,121,0,27.57));
		pts.push(convert(14,36,9.73,121,0,28.09));
		pts.push(convert(14,36,9.53,121,0,28.48));
		pts.push(convert(14,36,9.27,121,0,28.92));
		pts.push(convert(14,36,8.97,121,0,29.40));
		pts.push(convert(14,36,8.58,121,0,29.96));
		pts.push(convert(14,36,7.87,121,0,30.86));
		pts.push(convert(14,36,6.22,121,0,32.81));
		pts.push(convert(14,36,4.63,121,0,34.73));
		pts.push(convert(14,36,2.67,121,0,37.11));
		pts.push(convert(14,36,0.57,121,0,39.62));
		pts.push(convert(14,35,58.81,121,0,41.76));
		pts.push(convert(14,35,56.87,121,0,44.10));
		pts.push(convert(14,35,55.46,121,0,45.75));
		pts.push(convert(14,35,55.16,121,0,46.07));
		pts.push(convert(14,35,54.74,121,0,46.44));
		pts.push(convert(14,35,54.34,121,0,46.77));
		pts.push(convert(14,35,53.79,121,0,47.15));
		pts.push(convert(14,35,53.27,121,0,47.47));
		pts.push(convert(14,35,52.74,121,0,47.76));
		pts.push(convert(14,35,52.26,121,0,47.97));
		pts.push(convert(14,35,51.79,121,0,48.17));
		pts.push(convert(14,35,51.07,121,0,48.40));
		pts.push(convert(14,35,50.46,121,0,48.55));
		pts.push(convert(14,35,49.92,121,0,48.64));
		pts.push(convert(14,35,49.44,121,0,48.71));
		pts.push(convert(14,35,48.92,121,0,48.75));
		pts.push(convert(14,35,48.35,121,0,48.76));
		pts.push(convert(14,35,47.81,121,0,48.74));
		pts.push(convert(14,35,46.87,121,0,48.64));
		pts.push(convert(14,35,46.02,121,0,48.45));
		pts.push(convert(14,35,44.86,121,0,48.05));
		pts.push(convert(14,35,43.91,121,0,47.60));
		pts.push(convert(14,35,43.12,121,0,47.14));
		pts.push(convert(14,35,41.90,121,0,46.17));
		pts.push(convert(14,35,40.05,121,0,44.58));
		pts.push(convert(14,35,37.50,121,0,42.42));
		pts.push(convert(14,35,35.64,121,0,40.84));
		pts.push(convert(14,35,33.54,121,0,39.04));
		pts.push(convert(14,35,31.22,121,0,37.06));
		pts.push(convert(14,35,29.60,121,0,35.67));
		pts.push(convert(14,35,27.67,121,0,34.03));
		pts.push(convert(14,35,24.87,121,0,31.70));
		pts.push(convert(14,35,22.47,121,0,29.60));
		pts.push(convert(14,35,20.29,121,0,27.73));
		pts.push(convert(14,35,18.17,121,0,25.91));
		pts.push(convert(14,35,16.43,121,0,24.44));
		pts.push(convert(14,35,13.94,121,0,22.30));
		pts.push(convert(14,35,12.00,121,0,20.65));
		pts.push(convert(14,35,10.52,121,0,19.39));
		pts.push(convert(14,35,8.59,121,0,17.72));
		pts.push(convert(14,35,6.41,121,0,15.86));
		pts.push(convert(14,35,3.56,121,0,13.41));
		pts.push(convert(14,35,0.27,121,0,10.60));
		pts.push(convert(14,34,57.68,121,0,8.40));
		pts.push(convert(14,34,54.77,121,0,5.91));
		pts.push(convert(14,34,52.24,121,0,3.74));
		pts.push(convert(14,34,48.87,121,0,0.85));
		pts.push(convert(14,34,46.43,120,59,58.78));
		pts.push(convert(14,34,44.70,120,59,57.31));
		pts.push(convert(14,34,42.48,120,59,55.41));
		pts.push(convert(14,34,41.75,120,59,54.83));
		pts.push(convert(14,34,41.36,120,59,54.56));
		pts.push(convert(14,34,41.00,120,59,54.31));
		pts.push(convert(14,34,40.59,120,59,54.07));
		pts.push(convert(14,34,40.30,120,59,53.92));
		pts.push(convert(14,34,39.93,120,59,53.74));
		pts.push(convert(14,34,39.31,120,59,53.50));
		pts.push(convert(14,34,38.49,120,59,53.23));
		pts.push(convert(14,34,37.78,120,59,53.06));
		pts.push(convert(14,34,37.01,120,59,52.93));
		pts.push(convert(14,34,36.28,120,59,52.87));
		pts.push(convert(14,34,35.63,120,59,52.87));
		pts.push(convert(14,34,34.90,120,59,52.91));
		pts.push(convert(14,34,34.45,120,59,52.97));
		pts.push(convert(14,34,33.97,120,59,53.05));
		pts.push(convert(14,34,33.58,120,59,53.13));
		pts.push(convert(14,34,33.02,120,59,53.29));
		pts.push(convert(14,34,32.46,120,59,53.49));
		pts.push(convert(14,34,31.44,120,59,53.94));
		pts.push(convert(14,34,29.79,120,59,54.80));
		pts.push(convert(14,34,27.88,120,59,55.84));
		pts.push(convert(14,34,25.50,120,59,57.11));
		pts.push(convert(14,34,23.61,120,59,58.14));
		pts.push(convert(14,34,21.32,120,59,59.37));
		pts.push(convert(14,34,18.47,121,0,0.92));
		pts.push(convert(14,34,15.92,121,0,2.29));
		pts.push(convert(14,34,13.95,121,0,3.36));
		pts.push(convert(14,34,10.94,121,0,4.98));
		pts.push(convert(14,34,8.81,121,0,6.13));
		pts.push(convert(14,34,6.35,121,0,7.45));
		pts.push(convert(14,34,3.16,121,0,9.18));
		pts.push(convert(14,34,1.62,121,0,9.99));
		pts.push(convert(14,33,59.00,121,0,11.41));
		pts.push(convert(14,33,55.86,121,0,13.11));
		pts.push(convert(14,33,52.31,121,0,15.04));
		pts.push(convert(14,33,48.92,121,0,16.84));
		pts.push(convert(14,33,44.48,121,0,19.24));
		pts.push(convert(14,33,39.34,121,0,22.01));
		pts.push(convert(14,33,34.54,121,0,24.61));
		pts.push(convert(14,33,30.40,121,0,26.84));
		pts.push(convert(14,33,27.64,121,0,28.32));
		pts.push(convert(14,33,26.04,121,0,29.18));
		pts.push(convert(14,33,22.46,121,0,31.10));
		pts.push(convert(14,33,18.55,121,0,33.21));
		pts.push(convert(14,33,14.90,121,0,35.18));
		pts.push(convert(14,33,10.70,121,0,37.45));
		pts.push(convert(14,33,6.25,121,0,39.86));
		pts.push(convert(14,33,3.04,121,0,41.58));
		pts.push(convert(14,32,58.90,121,0,43.89));
		pts.push(convert(14,32,54.25,121,0,46.33));
		pts.push(convert(14,32,51.39,121,0,47.88));
		pts.push(convert(14,32,47.41,121,0,50.02));
		pts.push(convert(14,32,43.04,121,0,52.38));
		pts.push(convert(14,32,38.74,121,0,54.70));
		pts.push(convert(14,32,34.94,121,0,56.74));
		pts.push(convert(14,32,31.11,121,0,58.80));
		pts.push(convert(14,32,29.78,121,0,59.52));
		pts.push(convert(14,32,26.82,121,1,1.13));
		pts.push(convert(14,32,23.07,121,1,3.15));
		pts.push(convert(14,32,18.07,121,1,5.85));
		pts.push(convert(14,32,13.97,121,1,8.06));
		pts.push(convert(14,32,8.72,121,1,10.89));
		pts.push(convert(14,32,4.62,121,1,13.10));
		pts.push(convert(14,32,0.28,121,1,15.45));
		pts.push(convert(14,31,56.52,121,1,17.47));
		pts.push(convert(14,31,52.45,121,1,19.69));
		pts.push(convert(14,31,48.61,121,1,21.75));
		pts.push(convert(14,31,43.37,121,1,24.57));
		pts.push(convert(14,31,39.28,121,1,26.77));
		pts.push(convert(14,31,34.73,121,1,29.24));
		pts.push(convert(14,31,26.37,121,1,33.76));
		pts.push(convert(14,31,24.81,121,1,34.60));
		pts.push(convert(14,31,21.65,121,1,36.27));
		pts.push(convert(14,31,15.78,121,1,39.43));
		pts.push(convert(14,31,9.64,121,1,42.75));
		pts.push(convert(14,31,5.12,121,1,45.18));
		pts.push(convert(14,31,0.32,121,1,47.77));
		pts.push(convert(14,30,54.71,121,1,50.80));
		pts.push(convert(14,30,48.12,121,1,54.34));
		pts.push(convert(14,30,43.00,121,1,57.09));
		pts.push(convert(14,30,36.81,121,2,0.43));
		pts.push(convert(14,30,31.02,121,2,3.56));
		pts.push(convert(14,30,28.51,121,2,4.92));
		pts.push(convert(14,30,23.41,121,2,7.70));
		pts.push(convert(14,30,18.92,121,2,10.09));
		pts.push(convert(14,30,13.89,121,2,12.78));
		pts.push(convert(14,30,8.70,121,2,15.56));
		pts.push(convert(14,30,4.24,121,2,17.96));
		pts.push(convert(14,30,0.16,121,2,20.15));
		pts.push(convert(14,29,55.10,121,2,22.91));
		pts.push(convert(14,29,50.61,121,2,25.33));
		pts.push(convert(14,29,46.77,121,2,27.39));
		pts.push(convert(14,29,40.99,121,2,30.49));
		pts.push(convert(14,29,36.36,121,2,32.99));
		pts.push(convert(14,29,31.17,121,2,35.79));
		pts.push(convert(14,29,24.52,121,2,39.38));
		pts.push(convert(14,29,19.54,121,2,42.06));
		pts.push(convert(14,29,16.83,121,2,43.53));
		pts.push(convert(14,29,14.20,121,2,44.93));
		pts.push(convert(14,29,11.19,121,2,46.55));
		pts.push(convert(14,29,7.22,121,2,48.69));
		pts.push(convert(14,29,5.62,121,2,49.56));
		pts.push(convert(14,29,3.18,121,2,50.86));
		pts.push(convert(14,29,0.55,121,2,52.12));
		pts.push(convert(14,28,56.72,121,2,53.90));
		pts.push(convert(14,28,54.97,121,2,54.72));
		pts.push(convert(14,28,51.20,121,2,56.48));
		pts.push(convert(14,28,47.97,121,2,57.98));
		pts.push(convert(14,28,44.18,121,2,59.74));
		pts.push(convert(14,28,39.83,121,3,1.78));
		pts.push(convert(14,28,38.53,121,3,2.33));
		pts.push(convert(14,28,37.99,121,3,2.53));
		pts.push(convert(14,28,37.45,121,3,2.71));
		pts.push(convert(14,28,36.91,121,3,2.88));
		pts.push(convert(14,28,36.12,121,3,3.10));
		pts.push(convert(14,28,35.16,121,3,3.31));
		pts.push(convert(14,28,33.74,121,3,3.51));
		pts.push(convert(14,28,31.93,121,3,3.62));
		pts.push(convert(14,28,29.15,121,3,3.54));
		pts.push(convert(14,28,25.58,121,3,3.39));
		pts.push(convert(14,28,22.38,121,3,3.27));
		pts.push(convert(14,28,18.96,121,3,3.13));
		pts.push(convert(14,28,16.77,121,3,3.02));
		pts.push(convert(14,28,15.26,121,3,2.96));
		pts.push(convert(14,28,14.93,121,3,2.97));
		pts.push(convert(14,28,13.97,121,3,3.02));
		pts.push(convert(14,28,12.48,121,3,3.18));
		pts.push(convert(14,28,11.44,121,3,3.37));
		pts.push(convert(14,28,10.36,121,3,3.64));
		pts.push(convert(14,28,9.21,121,3,3.99));
		pts.push(convert(14,28,5.82,121,3,5.25));
		pts.push(convert(14,28,1.44,121,3,6.89));
		pts.push(convert(14,27,59.12,121,3,7.74));
		pts.push(convert(14,27,58.48,121,3,7.92));
		pts.push(convert(14,27,57.35,121,3,8.18));
		pts.push(convert(14,27,55.89,121,3,8.42));
		pts.push(convert(14,27,54.85,121,3,8.53));
		pts.push(convert(14,27,53.66,121,3,8.57));
		pts.push(convert(14,27,52.52,121,3,8.54));
		pts.push(convert(14,27,50.94,121,3,8.38));
		pts.push(convert(14,27,48.20,121,3,8.08));
		pts.push(convert(14,27,44.96,121,3,7.70));
		pts.push(convert(14,27,42.22,121,3,7.39));
		pts.push(convert(14,27,39.72,121,3,7.09));
		pts.push(convert(14,27,36.94,121,3,6.77));
		pts.push(convert(14,27,34.21,121,3,6.45));
		pts.push(convert(14,27,30.69,121,3,6.03));
		pts.push(convert(14,27,26.90,121,3,5.59));
		pts.push(convert(14,27,23.78,121,3,5.23));
		pts.push(convert(14,27,20.29,121,3,4.83));
		pts.push(convert(14,27,17.19,121,3,4.46));
		pts.push(convert(14,27,14.32,121,3,4.12));
		pts.push(convert(14,27,11.40,121,3,3.79));
		pts.push(convert(14,27,8.98,121,3,3.51));
		pts.push(convert(14,27,8.28,121,3,3.43));
		pts.push(convert(14,27,5.88,121,3,3.14));
		pts.push(convert(14,27,2.72,121,3,2.72));
		pts.push(convert(14,27,1.47,121,3,2.55));
		pts.push(convert(14,27,0.39,121,3,2.43));
		pts.push(convert(14,26,57.58,121,3,2.11));
		pts.push(convert(14,26,54.73,121,3,1.77));
		pts.push(convert(14,26,52.11,121,3,1.46));
		pts.push(convert(14,26,48.12,121,3,1.00));
		pts.push(convert(14,26,45.71,121,3,0.73));
		pts.push(convert(14,26,41.08,121,3,0.19));
		pts.push(convert(14,26,38.71,121,2,59.91));
		pts.push(convert(14,26,34.72,121,2,59.45));
		pts.push(convert(14,26,31.46,121,2,59.07));
		pts.push(convert(14,26,28.05,121,2,58.67));
		pts.push(convert(14,26,24.80,121,2,58.29));
		pts.push(convert(14,26,19.91,121,2,57.73));
		pts.push(convert(14,26,16.56,121,2,57.34));
		pts.push(convert(14,26,13.33,121,2,56.96));
		pts.push(convert(14,26,8.43,121,2,56.40));
		pts.push(convert(14,26,4.95,121,2,56.00));
		pts.push(convert(14,26,2.40,121,2,55.70));
		pts.push(convert(14,25,59.74,121,2,55.39));
		pts.push(convert(14,25,56.77,121,2,55.04));
		pts.push(convert(14,25,53.27,121,2,54.64));
		pts.push(convert(14,25,49.43,121,2,54.18));
		pts.push(convert(14,25,45.85,121,2,53.77));
		pts.push(convert(14,25,42.78,121,2,53.41));
		pts.push(convert(14,25,39.26,121,2,53.00));
		pts.push(convert(14,25,36.10,121,2,52.64));
		pts.push(convert(14,25,31.90,121,2,52.14));
		pts.push(convert(14,25,29.78,121,2,51.92));
		pts.push(convert(14,25,28.14,121,2,51.82));
		pts.push(convert(14,25,26.07,121,2,51.80));
		pts.push(convert(14,25,21.71,121,2,51.79));
		pts.push(convert(14,25,18.55,121,2,51.78));
		pts.push(convert(14,25,16.65,121,2,51.74));
		pts.push(convert(14,25,13.28,121,2,51.70));
		pts.push(convert(14,25,10.40,121,2,51.70));
		pts.push(convert(14,25,7.03,121,2,51.68));
		pts.push(convert(14,25,3.89,121,2,51.70));
		pts.push(convert(14,25,1.37,121,2,51.66));
		pts.push(convert(14,24,58.60,121,2,51.69));
		pts.push(convert(14,24,53.55,121,2,51.71));
		pts.push(convert(14,24,46.95,121,2,51.68));
		pts.push(convert(14,24,40.07,121,2,51.64));
		pts.push(convert(14,24,36.39,121,2,51.66));
		pts.push(convert(14,24,30.21,121,2,51.65));
		pts.push(convert(14,24,27.36,121,2,51.61));
		pts.push(convert(14,24,22.17,121,2,51.59));
		pts.push(convert(14,24,17.64,121,2,51.59));
		pts.push(convert(14,24,14.10,121,2,51.58));
		pts.push(convert(14,24,9.30,121,2,51.59));
		pts.push(convert(14,24,4.54,121,2,51.55));
		pts.push(convert(14,23,59.92,121,2,51.52));
		pts.push(convert(14,23,57.81,121,2,51.52));
		pts.push(convert(14,23,55.90,121,2,51.52));
		pts.push(convert(14,23,53.32,121,2,51.49));
		pts.push(convert(14,23,50.26,121,2,51.49));
		pts.push(convert(14,23,47.51,121,2,51.48));
		pts.push(convert(14,23,40.16,121,2,51.37));
		pts.push(convert(14,23,29.58,121,2,51.27));
		pts.push(convert(14,23,21.33,121,2,51.25));
		pts.push(convert(14,23,19.05,121,2,51.26));
		pts.push(convert(14,23,12.88,121,2,51.22));
		pts.push(convert(14,23,4.11,121,2,51.20));
		pts.push(convert(14,22,57.21,121,2,51.21));
		pts.push(convert(14,22,48.29,121,2,51.19));
		pts.push(convert(14,22,40.79,121,2,51.17));
		pts.push(convert(14,22,37.21,121,2,51.16));
		pts.push(convert(14,22,35.40,121,2,51.30));
		pts.push(convert(14,22,34.28,121,2,51.47));
		pts.push(convert(14,22,33.08,121,2,51.77));
		pts.push(convert(14,22,32.05,121,2,52.07));
		pts.push(convert(14,22,31.15,121,2,52.38));
		pts.push(convert(14,22,26.78,121,2,54.59));
		pts.push(convert(14,22,20.52,121,2,57.98));
		pts.push(convert(14,22,12.66,121,3,2.28));
		pts.push(convert(14,22,7.14,121,3,5.38));
		pts.push(convert(14,22,0.78,121,3,8.87));
		pts.push(convert(14,21,53.66,121,3,12.85));
		pts.push(convert(14,21,48.76,121,3,15.48));
		pts.push(convert(14,21,42.13,121,3,19.16));
		pts.push(convert(14,21,35.90,121,3,22.60));
		pts.push(convert(14,21,31.76,121,3,24.82));
		pts.push(convert(14,21,25.33,121,3,28.46));
		pts.push(convert(14,21,14.48,121,3,34.38));
		pts.push(convert(14,21,6.35,121,3,38.72));
		pts.push(convert(14,20,58.07,121,3,43.35));
		pts.push(convert(14,20,51.15,121,3,47.25));
		pts.push(convert(14,20,49.96,121,3,48.05));
		pts.push(convert(14,20,49.46,121,3,48.46));
		pts.push(convert(14,20,48.76,121,3,48.98));
		pts.push(convert(14,20,48.05,121,3,49.59));
		pts.push(convert(14,20,47.21,121,3,50.46));
		pts.push(convert(14,20,43.07,121,3,55.15));
		pts.push(convert(14,20,37.82,121,4,1.13));
		pts.push(convert(14,20,32.63,121,4,7.00));
		pts.push(convert(14,20,28.11,121,4,12.21));
		pts.push(convert(14,20,22.52,121,4,18.51));
		pts.push(convert(14,20,17.92,121,4,23.76));
		pts.push(convert(14,20,14.53,121,4,27.57));
		pts.push(convert(14,20,12.19,121,4,30.21));
		pts.push(convert(14,20,9.87,121,4,32.89));
		pts.push(convert(14,20,6.09,121,4,37.16));
		pts.push(convert(14,20,3.65,121,4,40.02));
		pts.push(convert(14,19,58.87,121,4,45.36));
		pts.push(convert(14,19,55.30,121,4,49.35));
		pts.push(convert(14,19,52.75,121,4,52.26));
		pts.push(convert(14,19,49.99,121,4,55.45));
		pts.push(convert(14,19,44.80,121,5,1.42));
		pts.push(convert(14,19,40.06,121,5,6.84));
		pts.push(convert(14,19,35.75,121,5,11.64));
		pts.push(convert(14,19,31.25,121,5,16.81));
		pts.push(convert(14,19,25.01,121,5,23.82));
		pts.push(convert(14,19,18.67,121,5,31.02));
		pts.push(convert(14,19,14.40,121,5,35.90));
		pts.push(convert(14,19,9.25,121,5,41.72));
		pts.push(convert(14,19,3.92,121,5,47.76));
		pts.push(convert(14,18,59.74,121,5,52.52));
		pts.push(convert(14,18,55.60,121,5,57.21));
		pts.push(convert(14,18,49.99,121,6,3.59));
		pts.push(convert(14,18,44.19,121,6,10.22));
		pts.push(convert(14,18,38.91,121,6,16.13));
		pts.push(convert(14,18,33.46,121,6,22.31));
		pts.push(convert(14,18,28.06,121,6,28.43));
		pts.push(convert(14,18,24.59,121,6,32.42));
		pts.push(convert(14,18,22.11,121,6,35.22));
		pts.push(convert(14,18,16.83,121,6,41.13));
		pts.push(convert(14,18,12.63,121,6,45.93));
		pts.push(convert(14,18,7.36,121,6,51.88));
		pts.push(convert(14,18,2.23,121,6,57.71));
		pts.push(convert(14,17,56.88,121,7,3.84));
		pts.push(convert(14,17,54.57,121,7,6.23));
		pts.push(convert(14,17,53.74,121,7,6.87));
		pts.push(convert(14,17,52.37,121,7,7.87));
		pts.push(convert(14,17,51.59,121,7,8.37));
		pts.push(convert(14,17,50.38,121,7,8.96));
		pts.push(convert(14,17,48.96,121,7,9.60));
		pts.push(convert(14,17,42.81,121,7,12.08));
		pts.push(convert(14,17,34.44,121,7,15.53));
		pts.push(convert(14,17,26.01,121,7,18.96));
		pts.push(convert(14,17,16.04,121,7,23.00));
		pts.push(convert(14,17,7.27,121,7,26.59));
		pts.push(convert(14,16,59.96,121,7,29.56));
		pts.push(convert(14,16,52.68,121,7,32.52));
		pts.push(convert(14,16,49.68,121,7,33.73));
		pts.push(convert(14,16,45.43,121,7,35.47));
		pts.push(convert(14,16,39.28,121,7,37.98));
		pts.push(convert(14,16,32.23,121,7,40.88));
		pts.push(convert(14,16,24.57,121,7,43.97));
		pts.push(convert(14,16,15.76,121,7,47.54));
		pts.push(convert(14,16,5.52,121,7,51.75));
		pts.push(convert(14,15,57.53,121,7,55.01));
		pts.push(convert(14,15,51.50,121,7,57.49));
		pts.push(convert(14,15,44.87,121,7,59.97));
		pts.push(convert(14,15,22.30,121,8,9.35));
		pts.push(convert(14,15,4.72,121,8,16.32));
		pts.push(convert(14,14,43.96,121,8,24.78));
		pts.push(convert(14,14,31.73,121,8,29.81));
		pts.push(convert(14,14,13.88,121,8,37.02));
		pts.push(convert(14,13,59.98,121,8,42.65));
		pts.push(convert(14,13,56.28,121,8,44.16));
		pts.push(convert(14,13,37.92,121,8,51.79));
		pts.push(convert(14,13,22.28,121,8,58.17));
		pts.push(convert(14,13,20.65,121,8,58.96));
		pts.push(convert(14,13,18.77,121,9,0.01));
		pts.push(convert(14,13,10.12,121,9,4.65));
		pts.push(convert(14,12,59.02,121,9,9.83));
		pts.push(convert(14,12,50.44,121,9,15.01));
		pts.push(convert(14,12,39.94,121,9,20.55));
		pts.push(convert(14,12,31.30,121,9,25.10));
		pts.push(convert(14,12,24.90,121,9,28.42));
		pts.push(convert(14,12,16.96,121,9,32.79));
		pts.push(convert(14,12,14.81,121,9,33.78));
		pts.push(convert(14,12,13.72,121,9,34.16));
		pts.push(convert(14,12,12.77,121,9,34.41));
		pts.push(convert(14,12,11.72,121,9,34.54));
		pts.push(convert(14,12,10.73,121,9,34.58));
		pts.push(convert(14,12,9.59,121,9,34.45));
		pts.push(convert(14,12,4.47,121,9,33.53));
		pts.push(convert(14,12,0.84,121,9,33.01));
		pts.push(convert(14,11,59.54,121,9,32.96));
		pts.push(convert(14,11,58.43,121,9,33.01));
		pts.push(convert(14,11,57.17,121,9,33.14));
		pts.push(convert(14,11,55.98,121,9,33.37));
		pts.push(convert(14,11,54.72,121,9,33.69));
		pts.push(convert(14,11,53.80,121,9,33.91));
		pts.push(convert(14,11,52.82,121,9,34.26));
		pts.push(convert(14,11,50.95,121,9,35.13));
		pts.push(convert(14,11,45.30,121,9,38.13));
		pts.push(convert(14,11,39.18,121,9,41.34));
		pts.push(convert(14,11,36.35,121,9,42.84));
		pts.push(convert(14,11,34.50,121,9,43.99));
		pts.push(convert(14,11,32.74,121,9,45.34));
		pts.push(convert(14,11,31.14,121,9,46.70));
		pts.push(convert(14,11,29.29,121,9,48.46));
		pts.push(convert(14,11,26.92,121,9,51.18));
		pts.push(convert(14,11,24.74,121,9,54.38));
		pts.push(convert(14,11,20.52,121,10,0.78));
		pts.push(convert(14,11,15.40,121,10,8.55));
		pts.push(convert(14,11,10.72,121,10,15.55));
		pts.push(convert(14,11,5.69,121,10,23.16));
		pts.push(convert(14,11,0.22,121,10,31.62));
		pts.push(convert(14,10,54.90,121,10,39.67));
		pts.push(convert(14,10,49.39,121,10,48.42));
		pts.push(convert(14,10,44.68,121,10,57.64));
		pts.push(convert(14,10,40.70,121,11,5.28));
		pts.push(convert(14,10,39.33,121,11,8.10));
		pts.push(convert(14,10,38.99,121,11,9.03));
		pts.push(convert(14,10,38.73,121,11,9.85));
		pts.push(convert(14,10,38.52,121,11,10.83));
		pts.push(convert(14,10,38.41,121,11,11.95));
		pts.push(convert(14,10,38.43,121,11,13.17));
		pts.push(convert(14,10,38.48,121,11,14.44));
		pts.push(convert(14,10,39.67,121,11,24.21));
		pts.push(convert(14,10,40.87,121,11,33.48));
		pts.push(convert(14,10,42.05,121,11,42.61));
		pts.push(convert(14,10,43.23,121,11,52.15));
		pts.push(convert(14,10,44.65,121,12,3.76));
		pts.push(convert(14,10,45.46,121,12,11.15));
		pts.push(convert(14,10,45.49,121,12,13.36));
		pts.push(convert(14,10,45.42,121,12,15.64));
		pts.push(convert(14,10,45.24,121,12,22.92));
		pts.push(convert(14,10,45.18,121,12,25.17));
		pts.push(convert(14,10,44.87,121,12,26.71));
		pts.push(convert(14,10,44.46,121,12,28.12));
		pts.push(convert(14,10,43.93,121,12,29.31));
		pts.push(convert(14,10,43.32,121,12,30.57));
		pts.push(convert(14,10,37.69,121,12,40.26));
		pts.push(convert(14,10,34.32,121,12,46.26));
		pts.push(convert(14,10,33.91,121,12,47.42));
		pts.push(convert(14,10,33.58,121,12,48.43));
		pts.push(convert(14,10,33.30,121,12,49.72));
		pts.push(convert(14,10,33.13,121,12,50.94));
		pts.push(convert(14,10,33.03,121,12,52.43));
		pts.push(convert(14,10,33.10,121,12,53.59));
		pts.push(convert(14,10,35.58,121,13,3.09));
		pts.push(convert(14,10,40.31,121,13,15.55));
		pts.push(convert(14,10,43.37,121,13,21.66));
		pts.push(convert(14,10,44.31,121,13,23.08));
		pts.push(convert(14,10,45.09,121,13,24.05));
		pts.push(convert(14,10,46.19,121,13,25.12));
		pts.push(convert(14,10,52.09,121,13,30.09));
		pts.push(convert(14,10,52.82,121,13,30.95));
		pts.push(convert(14,10,53.38,121,13,31.69));
		pts.push(convert(14,10,53.93,121,13,32.67));
		pts.push(convert(14,10,54.39,121,13,33.68));
		pts.push(convert(14,10,54.84,121,13,35.15));
		pts.push(convert(14,10,55.17,121,13,36.37));
		pts.push(convert(14,10,55.25,121,13,38.23));
		pts.push(convert(14,10,55.04,121,13,49.02));
		pts.push(convert(14,10,54.80,121,14,1.08));
		pts.push(convert(14,10,54.65,121,14,12.28));
		pts.push(convert(14,10,54.53,121,14,19.89));
		pts.push(convert(14,10,54.21,121,14,24.88));
		pts.push(convert(14,10,54.17,121,14,30.95));
		pts.push(convert(14,10,53.68,121,14,32.70));
		pts.push(convert(14,10,52.83,121,14,34.94));
		pts.push(convert(14,10,52.09,121,14,36.42));
		pts.push(convert(14,10,51.35,121,14,37.71));
		pts.push(convert(14,10,50.61,121,14,38.78));
		pts.push(convert(14,10,49.82,121,14,39.79));
		pts.push(convert(14,10,48.83,121,14,40.90));
		pts.push(convert(14,10,47.95,121,14,41.75));
		pts.push(convert(14,10,46.97,121,14,42.60));
		pts.push(convert(14,10,45.81,121,14,43.48));
		pts.push(convert(14,10,39.67,121,14,48.13));
		pts.push(convert(14,10,32.35,121,14,53.66));
		pts.push(convert(14,10,24.71,121,14,59.40));
		pts.push(convert(14,10,16.32,121,15,5.63));
	    this.trains.push(createPath(pts,colors[3]));
	 //    pts.splice(0,pts.length);
		// pts.push(convert(14,4,8.99,121,19,16.01));
		// pts.push(convert(13,55,32.85,121,25,30.71));
		// pts.push(convert(13,55,3.14,121,29,42.62));
		// pts.push(convert(13,55,36.81,121,36,47.05));
		// pts.push(convert(13,52,38.69,121,55,2.94));
		// pts.push(convert(13,57,20.53,122,1,13.28));
		// pts.push(convert(13,55,12.82,122,6,10.38));
		// pts.push(convert(13,53,6.68,122,15,38.98));
		// pts.push(convert(13,57,20.06,122,17,55.77));
		// pts.push(convert(13,57,59.78,122,32,4.63));
		// pts.push(convert(13,49,15.38,122,45,13.11));
		// pts.push(convert(13,45,51.39,122,57,47.77));
		// pts.push(convert(13,41,31.36,123,3,30.24));
		// pts.push(convert(13,36,59.40,123,4,5.41));
		// pts.push(convert(13,35,34.50,123,4,45.36));
		// pts.push(convert(13,35,28.05,123,6,13.94));
		// pts.push(convert(13,37,10.34,123,11,11.21));
		// pts.push(convert(13,27,22.77,123,22,5.29));
		// pts.push(convert(13,25,10.75,123,24,34.48));
		// pts.push(convert(13,17,17.05,123,29,33.15));
		// pts.push(convert(13,14,33.29,123,32,28.52));
		// pts.push(convert(13,9,2.20,123,42,59.21));
		// pts.push(convert(13,9,5.73,123,45,7.27));
		// this.trains.push(createPath(pts,"#996633"));
		var mapOptions = {
	    center: { lat: 13, lng: 118},
	    zoom: 6,
    	zoomControl: true,
    	zoomControlOptions: {
    		// style: google.maps.ZoomControlStyle.SMALL,
	        position: google.maps.ControlPosition.RIGHT_BOTTOM
	    },
	    disableDefaultUI: true
	  };

	  this.map = new google.maps.Map(document.getElementById('map'), mapOptions);
	  this.portMarkers = [];
	  this.infowindow = new google.maps.InfoWindow({
	      content: ""
	  });
	  this.cat_vis = {};

	  for(var i = 0; i < categories.length; i++) {
	  	this.cat_vis[categories[i].id] = true;
	  }

	  for(var i = 0; i < this.ports.length; i++) {
	  	var pinIcon = new google.maps.MarkerImage(
		    categoryMarkers[this.ports[i].category_id],
		    null, /* size is determined at runtime */
		    null, /* origin is 0,0 */
		    null, /* anchor is bottom center of the scaled image */
		    new google.maps.Size(28, 46)
			);  

	  	// var iconImage = {
		  // 	url: categoryMarkers[ports[i].category_id]
		  // 	// anchor: new google.maps.Point(16,16)
		  // }

	  	var marker = new google.maps.Marker({
			  map: this.map,
			  position: getLatLng(this.ports[i]),
			  title: this.ports[i].name,
			  icon: pinIcon,//categoryMarkers[this.ports[i].category_id],//iconImage,
			  data_category: this.ports[i].category_id,
			  data_hidden: false,
			  data_id: this.ports[i].id,
			  index: i,
		    optimized: false,
			  opacity:1
			})

	  	this.portMarkers.push(marker);

			google.maps.event.addListener(marker, 'click', (function(_marker, _this) {
				return function() {
			    _this.mapUI.setActivePort(_marker.data_id);
			    _this.map.panTo(_marker.position);

			    if(_this.mapUI.mapState == "origin") {
			    	_this.mapUI.setOriginPort(_this.ports[_marker.index]);
			    }
			    if(_this.mapUI.mapState == "destination") {
			    	_this.mapUI.setDestinationPort(_this.ports[_marker.index]);
			    }

			    var string = templates["info-window"](_this.ports[_marker.index]);
			    _this.infowindow.setContent(string);
			    _this.infowindow.open(_this.map, _marker);
			  }
			})(marker, this));
	  }
	  // mapUI.setActivePort(233);
	}

	function convert(deg1, min1, sec1, deg2 ,min2, sec2){
		var lt = deg1+(min1/60)+(sec1/3600);
		var ln = deg2+(min2/60)+(sec2/3600);
		var ret = new google.maps.LatLng(lt,ln);
		// console.log(ret.lat()+" "+ret.lng());
		return ret;
	}

	function createPath(pts,cl){
		var ret = new google.maps.Polyline({
	    	path: pts,
	    	strokeColor: cl,
	    	strokeOpacity: 0.8,
	      	strokeWeight: 5.5
	    });
	    return ret;
	}
	MapDisplay.prototype.panToMarker = function(id) {
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_id == id) {
				this.map.panTo(this.portMarkers[i].position);
				this.portMarkers[i].setMap(this.map);

				var string = templates["info-window"](this.ports[i]);
			  this.infowindow.setContent(string);
			  this.infowindow.open(this.map, this.portMarkers[i]);

				this.mapUI.setActivePort(id);
			}
		}
	}

	MapDisplay.prototype.toggleLayer = function(id) {
		if(this.cat_vis[id] == true) {
			this.hideLayer(id);
			if(id == train_id){
				this.hideLayer(train_id+1);
			}
			return false;
		}
		else {
			this.showLayer(id);
			if(id == train_id){
				this.showLayer(train_id+1);
			}
			return true;
		}
	}

	MapDisplay.prototype.hideLayer = function(id) {
		if(this.cat_vis[i] == false)
			return;
		this.cat_vis[id] = false;
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_category == id) {
				if(this.portMarkers[i].data_hidden == false)
					this.portMarkers[i].setMap(null);
				this.portMarkers[i].data_hidden = true;
			}
		}
		if(id==4){
			for(var i=0; i<this.trains.length; i++){
				this.trains[i].setMap(null);
			}
		}
		$(".filter-image[data-category="+id+"]").toggleClass("gray", true);
	}

	MapDisplay.prototype.hideAllLayers = function() {
		for (var key in this.cat_vis) {
		  this.hideLayer(key);
		}
	}

	MapDisplay.prototype.showAllLayers = function() {
		for (var key in this.cat_vis) {
		  this.showLayer(key);
		}
	}

	MapDisplay.prototype.showLayer = function(id) {
		if(this.cat_vis[i] == true)
			return;
		this.cat_vis[id] = true;
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_category == id) {
				if(this.portMarkers[i].data_hidden == true)
					this.portMarkers[i].setMap(this.map);
				this.portMarkers[i].data_hidden = false;
			}
		}
		if(id==4){
			console.log("lol");
			for(var i=0; i<this.trains.length; i++){
				this.trains[i].setMap(this.map);
			}
		}
		$(".filter-image[data-category="+id+"]").toggleClass("gray", false);
	}

	MapDisplay.prototype.showPoi = function(id) {
		for(var i = 0; i < this.portMarkers.length; i++) {
			if(this.portMarkers[i].data_id == id) {
				if(this.portMarkers[i].data_hidden == true)
					this.portMarkers[i].setMap(this.map);
				this.portMarkers[i].data_hidden = false;
				return;
			}
		}
	}

	MapDisplay.prototype.focusPorts = function(portList) {
		this.hideAllLayers();
		for(var i = 0; i < portList.length; i++) {
			this.showPoi(portList[i].id);
		}
	}

	MapDisplay.prototype.removePath = function() {
		if(this.currentPath != null) {
			this.currentPath.flightPath.setMap(null);
			for(var i = 0; i < this.currentPath.poiCircles.length; i++) {
				this.currentPath.poiCircles[i].setMap(null);
			}
		}
	}

	MapDisplay.prototype.showRoute = function(routeData) {
		this.removePath();
		if(this.currentPath == null) {
			this.currentPath = {};
		}

		var path = routeData.portPath;

		var flightPathCoordinates = [];
		for(var i = 0; i < path.length; i++) {
			flightPathCoordinates.push(getLatLng(path[i]));
		}

		this.currentPath.flightPath = new google.maps.Polyline({
	    path: flightPathCoordinates,
	    geodesic: true,
	    strokeColor: '#F16521',
	    strokeOpacity: 1.0,
	    strokeWeight: 4,
	    map: this.map
	  });

		this.currentPath.poiCircles = [];
	  for (var i = 0; i < path.length; i++) {
	  	var color = '#FFFFFF';
	  	if(i == path.length-1) {
	  		color = '#F16521';
	  	}
	    var poiOptions = {
		    path: google.maps.SymbolPath.CIRCLE,
	      strokeColor: '#F16521',
		    strokeOpacity: 1,
	      strokeWeight: 2,
	      fillColor: color,
	      fillOpacity: 1,
		    scale: 5 //pixels
		  }

	    // Add the circle for this city to the map.
	    this.currentPath.poiCircles.push(new google.maps.Marker({
			  	position: getLatLng(path[i]),
			  	icon: poiOptions,
		      optimized: false,
		      zIndex: 1,
			  	map: this.map
				})
			);
	  }

	  this.focusPorts(path);
	}
	return MapDisplay;
})();

function initializeAutocomplete() {
	var substringMatcher = function(strs) {
	  return function findMatches(q, cb) {
	    var matches, substringRegex;
	 
	    // an array that will be populated with substring matches
	    matches = [];
	 
	    // regex used to determine if a string contains the substring `q`
	    substrRegex = new RegExp(q, 'i');
	 
	    // iterate through the pool of strings and for any string that
	    // contains the substring `q`, add it to the `matches` array
	    $.each(strs, function(i, port) {
	      if (substrRegex.test(port.name)) {
	        matches.push(port);
	      }
	    });
	 
	    cb(matches);
	  };
	};

	$('#origin-text').typeahead({
	  hint: true,
	  highlight: true,
	  minLength: 1
	},
	{
	  name: 'ports',
	  source: substringMatcher(ports),
	  display: function(data) {
	  	return data.name;
	  }
	});

	$('#origin-text').bind('typeahead:select', function(ev, suggestion) {
	  mapUI.setOriginPort(suggestion);
	});

	$('#destination-text').typeahead({
	  hint: true,
	  highlight: true,
	  minLength: 1
	},
	{
	  name: 'ports',
	  source: substringMatcher(ports),
	  display: function(data) {
	  	return data.name;
	  }
	});

	$('#destination-text').bind('typeahead:select', function(ev, suggestion) {
	  mapUI.setDestinationPort(suggestion);
	});
}

function portsViewScript() {
 var ports_table = $('#points').DataTable({
    "columnDefs": [
      {
          "targets": [ 0 ],
          "visible": false,
          "searchable": true
      },
      {
          "targets": [ 5, 6 ],
          "searchable": false,
          "orderable": false
      }
    ]
  });

 	$(".delete-port").on("ajax:success", 
 		function(e, data, status, xhr) {
 			ports_table.row(function(index, _data) {
 				return (data["poi_id"] == _data[0])
 			}).remove().draw(false);

 			toastr.options = {
			  "positionClass": "toast-bottom-right"
			}
 			if(data["result"] == "ok")
 				toastr["success"](data["poi"].name + " was successfully deleted", "Deletion Successful");
 			else
 				toastr["error"]("Failed to delete " + data["poi"].name, "Deletion Failed");
 		}
 	).on("ajax:error",
 		function(e, xhr, status, error) {
			toastr.options = {
			  "positionClass": "toast-bottom-right"
			}
 			toastr["error"]("Failed to delete " + data["poi"].name, "Deletion Failed");
 		}
 	);
}



function editPortViewScript() {
	var source   = $("#additional-info-template").html();
	var form_template = Handlebars.compile(source);

	var errorCallback = function(e, xhr, status, error) {
		toastr["error"]("There is either connection issues or server issues", "Communication Error");
	};

	var editDetailCallback = function(e, data, status, xhr) {
		if(data["action"] == "delete") {
			toastr.options = {
		  "positionClass": "toast-bottom-right"
		}
		if(data["result"] == "ok") {
			toastr["success"](data["info"].name + " was successfully deleted", "Deletion Successful");
			$(e.target).parent().slideUp(500, function() {
				$(e.target).parent().remove();
			});
		}
		else
			toastr["error"]("Failed to delete " + data["info"].name, "Deletion Failed");
		}
		else {
			toastr.options = {
	  "positionClass": "toast-bottom-right"
		}
		if(data["result"] == "ok")
			toastr["success"]("Changes to " + data["info"].name + " were successfully saved", "Save Successful");
		else
			toastr["error"]("Failed to save changes to " + data["info"].name, "Save Failed");
		}
	}

	var createDetailCallback = function(e, data, status, xhr) {
		toastr.options = {
	  	"positionClass": "toast-bottom-right"
		}
		if(data["result"] == "ok") {
			toastr["success"](data["info"].name + " was successfully saved", "Save Successful");
			$(e.target).toggleClass("create-detail", false)
			$(e.target).toggleClass("edit-detail", false)
			$(e.target).attr("action", save_info_path);
			$(e.target).find("[name='details[id]']").val(data["info"].id);
			$(e.target).find("[name='commit']").val("Save Changes");
			$(e.target).find(".buttons").append("<input class=\"btn btn-default\" name=\"commit\" type=\"submit\" value=\"Delete\" onclick=\"return confirm('Delete info?')\" />");
			$(e.target).off("ajax:success");
			$(e.target).on("ajax:success", editDetailCallback);


			var string = form_template(port_data);
			$("#additional-info-list").append(string);
			$(".create-detail")
		 		.on("ajax:success", createDetailCallback)
		 		.on("ajax:error", errorCallback);
		}
		else
			toastr["error"]("Failed to save " + data["info"].name, "Save Failed");
	}

 	var editPortCallback = function(e, data, status, xhr) {
 		console.log(data);
		if(data["action"] == "delete") {
			toastr.options = { "positionClass": "toast-bottom-right" };

			if(data["result"] == "ok") {
				toastr["success"]("\"" + data["poi"].name + "\" was successfully deleted", "Deletion Successful");
			}
			else
				toastr["error"]("Failed to delete \"" + data["poi"].name + "\"", "Deletion Failed");
		}
		else if(data["action"] == "save"){
			toastr.options = { "positionClass": "toast-bottom-right" };

			if(data["result"] == "ok")
				toastr["success"]("Changes to \"" + data["poi"].name + "\" were successfully saved", "Save Successful");
			else
				toastr["error"]("Failed to save changes to \"" + data["poi"].name + "\"", "Save Failed");
		}
		else {
			toastr.options = { "positionClass": "toast-bottom-right" };

			if(data["result"] == "ok") {
				toastr["success"]("\"" + data["poi"].name + "\" was successfully saved", "Save Successful");
				$(e.target).find("[name='commit']").val("Save Changes");
				$(e.target).find("[name='poi[id]']").val(data["poi"].id);
				$("#additional-info-section").slideDown(500, function() {
					$("#additional-info-section").find("[name='details[poi_id]']").val(data["poi"].id);
				});
				port_data.id = data["poi"].id;
			}
			else
				toastr["error"]("Failed to save \"" + data["poi"].name + "\"", "Save Failed");
		}
	}

	$(".edit-detail")
 		.on("ajax:success", editDetailCallback)
 		.on("ajax:error", errorCallback);

 	$(".create-detail")
 		.on("ajax:success", createDetailCallback)
 		.on("ajax:error", errorCallback);

 	$("#edit_port")
 		.on("ajax:success", editPortCallback)
 		.on("ajax:error", errorCallback);

 	$("#category-id-select").change(function() {
 			if($(this).val() == "-1") {
 				$("#new-category").slideDown();
 			}
 			else {
 				$("#new-category").slideUp();
 			}
 	});

}

function editRouteViewScript() {
	$("#provider-id-select").change(function() {
 			if($(this).val() == "-1") {
 				$("#new-provider").slideDown();
 			}
 			else {
 				$("#new-provider").slideUp();
 			}
 	});

 	$('.day-cb').change(function() {
 		var mask = 1 << $(this).data("off");
 		var curr_days = $("#days").val();
 		
    if(this.checked)
      curr_days = curr_days | mask;
    else
    	curr_days = curr_days & (mask^127);
    $("#days").val(curr_days); 
  });

  var editRouteCallback = function(e, data, status, xhr) {
  	console.log(data);
  }

  var errorCallback = function(e, xhr, status, error) {
		toastr["error"]("There is either connection issues or server issues", "Communication Error");
	};

  $("#edit_route")
 		.on("ajax:success", editRouteCallback)
 		.on("ajax:error", errorCallback);
}

function routesViewScript() {
 var routes_table = $('#points').DataTable({
    "columnDefs": [
      {
          "targets": [ 0 ],
          "visible": false,
          "searchable": true
      },
      {
          "targets": [ 8, 9 ],
          "searchable": false,
          "orderable": false
      }
    ]
  });

 	$(".delete-port").on("ajax:success", 
 		function(e, data, status, xhr) {
 			routes_table.row(function(index, _data) {
 				return (data["route_id"] == _data[0])
 			}).remove().draw(false);

 			toastr.options = {
			  "positionClass": "toast-bottom-right"
			}
 			if(data["result"] == "ok")
 				toastr["success"](data["route"].route_id + " was successfully deleted", "Deletion Successful");
 			else
 				toastr["error"]("Failed to delete " + data["route"].route_id, "Deletion Failed");
 		}
 	).on("ajax:error",
 		function(e, xhr, status, error) {
			toastr.options = {
			  "positionClass": "toast-bottom-right"
			}
 			toastr["error"]("Failed to delete " + data["route"].route_id, "Deletion Failed");
 		}
 	);
}

function homepageScript() {
	$(".main-view").onepage_scroll({
		   sectionContainer: "section", 
		   easing: "ease",       
		   animationTime: 1000,    
		   pagination: true, 
		   loop: true, 
		   keyboard: true, 
		   responsiveFallback: false,  
		   direction: "vertical"  
		});
    
    // var input = $('input[type="text"]');
    // input.attr('size',input.attr('placeholder').length);
}

function ready() {
	if(view == "homepage") {
		homepageScript();
		return;
	}
	
	if(view === "ports") {
		portsViewScript();
		return;
	}

	if(view === "routes") {
		routesViewScript();
		return;
	}

	if(view === "edit_port") {
		editPortViewScript();
		return;
	}

	if(view === "edit_route") {
		editRouteViewScript();
		return;
	}

	if(view === "sign_in") {
		return;
	}
	
	if(view !== "export" && view !== "port_vis"){
		compileTemplates();

		mapUI = new MapUI(ports, images, infos);
		mapDisplay = new MapDisplay(ports, mapUI);
		mapUI.setMapDisplay(mapDisplay);
		mapDisplay.hideAllLayers(3);
		mapDisplay.showLayer(1);

		initializeAutocomplete();

		$(".filter-image").click(function(e) {
			var visible = mapDisplay.toggleLayer($(this).data("category"));
			// $(this).toggleClass("gray", !visible);
		});
		
		$("#panel-title").click(function() {
			mapUI.switchView("details");
		});

		$("#routes-options .section-title").click(function(e) {
			$("#routes-options-container").slideUp(400, function(c) {
				$("#routes-options .scroll-container").html("");
			});
			mapUI.showAllRoutes();
		});
	}
	
    $(function () {
	  $('[data-toggle="tooltip"]').tooltip()
	});
}

$(document).ready(ready)
$(document).on('page:load', ready)
